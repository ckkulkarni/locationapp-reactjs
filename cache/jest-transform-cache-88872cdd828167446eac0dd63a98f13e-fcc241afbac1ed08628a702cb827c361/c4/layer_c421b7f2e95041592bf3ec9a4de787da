cb49b02f04a0c6cd6465fb3d0a74b055
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createLayerHook = createLayerHook;
exports.useLayerLifecycle = useLayerLifecycle;
var _react = require("react");
var _attribution = require("./attribution.js");
var _context = require("./context.js");
var _events = require("./events.js");
var _pane = require("./pane.js");
function useLayerLifecycle(element, context) {
  (0, _react.useEffect)(function addLayer() {
    const container = context.layerContainer ?? context.map;
    container.addLayer(element.instance);
    return function removeLayer() {
      context.layerContainer?.removeLayer(element.instance);
      context.map.removeLayer(element.instance);
    };
  }, [context, element]);
}
function createLayerHook(useElement) {
  return function useLayer(props) {
    const context = (0, _context.useLeafletContext)();
    const elementRef = useElement((0, _pane.withPane)(props, context), context);
    (0, _attribution.useAttribution)(context.map, props.attribution);
    (0, _events.useEventHandlers)(elementRef.current, props.eventHandlers);
    useLayerLifecycle(elementRef.current, context);
    return elementRef;
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX2F0dHJpYnV0aW9uIiwiX2NvbnRleHQiLCJfZXZlbnRzIiwiX3BhbmUiLCJ1c2VMYXllckxpZmVjeWNsZSIsImVsZW1lbnQiLCJjb250ZXh0IiwidXNlRWZmZWN0IiwiYWRkTGF5ZXIiLCJjb250YWluZXIiLCJsYXllckNvbnRhaW5lciIsIm1hcCIsImluc3RhbmNlIiwicmVtb3ZlTGF5ZXIiLCJjcmVhdGVMYXllckhvb2siLCJ1c2VFbGVtZW50IiwidXNlTGF5ZXIiLCJwcm9wcyIsInVzZUxlYWZsZXRDb250ZXh0IiwiZWxlbWVudFJlZiIsIndpdGhQYW5lIiwidXNlQXR0cmlidXRpb24iLCJhdHRyaWJ1dGlvbiIsInVzZUV2ZW50SGFuZGxlcnMiLCJjdXJyZW50IiwiZXZlbnRIYW5kbGVycyJdLCJzb3VyY2VzIjpbImxheWVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZUF0dHJpYnV0aW9uIH0gZnJvbSAnLi9hdHRyaWJ1dGlvbi5qcyc7XG5pbXBvcnQgeyB1c2VMZWFmbGV0Q29udGV4dCB9IGZyb20gJy4vY29udGV4dC5qcyc7XG5pbXBvcnQgeyB1c2VFdmVudEhhbmRsZXJzIH0gZnJvbSAnLi9ldmVudHMuanMnO1xuaW1wb3J0IHsgd2l0aFBhbmUgfSBmcm9tICcuL3BhbmUuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUxheWVyTGlmZWN5Y2xlKGVsZW1lbnQsIGNvbnRleHQpIHtcbiAgICB1c2VFZmZlY3QoZnVuY3Rpb24gYWRkTGF5ZXIoKSB7XG4gICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGNvbnRleHQubGF5ZXJDb250YWluZXIgPz8gY29udGV4dC5tYXA7XG4gICAgICAgIGNvbnRhaW5lci5hZGRMYXllcihlbGVtZW50Lmluc3RhbmNlKTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIHJlbW92ZUxheWVyKCkge1xuICAgICAgICAgICAgY29udGV4dC5sYXllckNvbnRhaW5lcj8ucmVtb3ZlTGF5ZXIoZWxlbWVudC5pbnN0YW5jZSk7XG4gICAgICAgICAgICBjb250ZXh0Lm1hcC5yZW1vdmVMYXllcihlbGVtZW50Lmluc3RhbmNlKTtcbiAgICAgICAgfTtcbiAgICB9LCBbXG4gICAgICAgIGNvbnRleHQsXG4gICAgICAgIGVsZW1lbnRcbiAgICBdKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVMYXllckhvb2sodXNlRWxlbWVudCkge1xuICAgIHJldHVybiBmdW5jdGlvbiB1c2VMYXllcihwcm9wcykge1xuICAgICAgICBjb25zdCBjb250ZXh0ID0gdXNlTGVhZmxldENvbnRleHQoKTtcbiAgICAgICAgY29uc3QgZWxlbWVudFJlZiA9IHVzZUVsZW1lbnQod2l0aFBhbmUocHJvcHMsIGNvbnRleHQpLCBjb250ZXh0KTtcbiAgICAgICAgdXNlQXR0cmlidXRpb24oY29udGV4dC5tYXAsIHByb3BzLmF0dHJpYnV0aW9uKTtcbiAgICAgICAgdXNlRXZlbnRIYW5kbGVycyhlbGVtZW50UmVmLmN1cnJlbnQsIHByb3BzLmV2ZW50SGFuZGxlcnMpO1xuICAgICAgICB1c2VMYXllckxpZmVjeWNsZShlbGVtZW50UmVmLmN1cnJlbnQsIGNvbnRleHQpO1xuICAgICAgICByZXR1cm4gZWxlbWVudFJlZjtcbiAgICB9O1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsUUFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsT0FBQSxHQUFBSCxPQUFBO0FBQ0EsSUFBQUksS0FBQSxHQUFBSixPQUFBO0FBQ08sU0FBU0ssaUJBQWlCQSxDQUFDQyxPQUFPLEVBQUVDLE9BQU8sRUFBRTtFQUNoRCxJQUFBQyxnQkFBUyxFQUFDLFNBQVNDLFFBQVFBLENBQUEsRUFBRztJQUMxQixNQUFNQyxTQUFTLEdBQUdILE9BQU8sQ0FBQ0ksY0FBYyxJQUFJSixPQUFPLENBQUNLLEdBQUc7SUFDdkRGLFNBQVMsQ0FBQ0QsUUFBUSxDQUFDSCxPQUFPLENBQUNPLFFBQVEsQ0FBQztJQUNwQyxPQUFPLFNBQVNDLFdBQVdBLENBQUEsRUFBRztNQUMxQlAsT0FBTyxDQUFDSSxjQUFjLEVBQUVHLFdBQVcsQ0FBQ1IsT0FBTyxDQUFDTyxRQUFRLENBQUM7TUFDckROLE9BQU8sQ0FBQ0ssR0FBRyxDQUFDRSxXQUFXLENBQUNSLE9BQU8sQ0FBQ08sUUFBUSxDQUFDO0lBQzdDLENBQUM7RUFDTCxDQUFDLEVBQUUsQ0FDQ04sT0FBTyxFQUNQRCxPQUFPLENBQ1YsQ0FBQztBQUNOO0FBQ08sU0FBU1MsZUFBZUEsQ0FBQ0MsVUFBVSxFQUFFO0VBQ3hDLE9BQU8sU0FBU0MsUUFBUUEsQ0FBQ0MsS0FBSyxFQUFFO0lBQzVCLE1BQU1YLE9BQU8sR0FBRyxJQUFBWSwwQkFBaUIsR0FBRTtJQUNuQyxNQUFNQyxVQUFVLEdBQUdKLFVBQVUsQ0FBQyxJQUFBSyxjQUFRLEVBQUNILEtBQUssRUFBRVgsT0FBTyxDQUFDLEVBQUVBLE9BQU8sQ0FBQztJQUNoRSxJQUFBZSwyQkFBYyxFQUFDZixPQUFPLENBQUNLLEdBQUcsRUFBRU0sS0FBSyxDQUFDSyxXQUFXLENBQUM7SUFDOUMsSUFBQUMsd0JBQWdCLEVBQUNKLFVBQVUsQ0FBQ0ssT0FBTyxFQUFFUCxLQUFLLENBQUNRLGFBQWEsQ0FBQztJQUN6RHJCLGlCQUFpQixDQUFDZSxVQUFVLENBQUNLLE9BQU8sRUFBRWxCLE9BQU8sQ0FBQztJQUM5QyxPQUFPYSxVQUFVO0VBQ3JCLENBQUM7QUFDTCJ9