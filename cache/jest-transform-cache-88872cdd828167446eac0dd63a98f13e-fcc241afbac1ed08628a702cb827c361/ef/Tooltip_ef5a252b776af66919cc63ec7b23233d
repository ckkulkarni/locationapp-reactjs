312e234a2d383292633721d43dcf62ca
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tooltip = void 0;
var _core = require("@react-leaflet/core");
var _leaflet = require("leaflet");
var _react = require("react");
const Tooltip = (0, _core.createOverlayComponent)(function createTooltip(props, context) {
  const tooltip = new _leaflet.Tooltip(props, context.overlayContainer);
  return (0, _core.createElementObject)(tooltip, context);
}, function useTooltipLifecycle(element, context, {
  position
}, setOpen) {
  (0, _react.useEffect)(function addTooltip() {
    const container = context.overlayContainer;
    if (container == null) {
      return;
    }
    const {
      instance
    } = element;
    const onTooltipOpen = event => {
      if (event.tooltip === instance) {
        if (position != null) {
          instance.setLatLng(position);
        }
        instance.update();
        setOpen(true);
      }
    };
    const onTooltipClose = event => {
      if (event.tooltip === instance) {
        setOpen(false);
      }
    };
    container.on({
      tooltipopen: onTooltipOpen,
      tooltipclose: onTooltipClose
    });
    container.bindTooltip(instance);
    return function removeTooltip() {
      container.off({
        tooltipopen: onTooltipOpen,
        tooltipclose: onTooltipClose
      });
      // @ts-ignore protected property
      if (container._map != null) {
        container.unbindTooltip();
      }
    };
  }, [element, context, setOpen, position]);
});
exports.Tooltip = Tooltip;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29yZSIsInJlcXVpcmUiLCJfbGVhZmxldCIsIl9yZWFjdCIsIlRvb2x0aXAiLCJjcmVhdGVPdmVybGF5Q29tcG9uZW50IiwiY3JlYXRlVG9vbHRpcCIsInByb3BzIiwiY29udGV4dCIsInRvb2x0aXAiLCJMZWFmbGV0VG9vbHRpcCIsIm92ZXJsYXlDb250YWluZXIiLCJjcmVhdGVFbGVtZW50T2JqZWN0IiwidXNlVG9vbHRpcExpZmVjeWNsZSIsImVsZW1lbnQiLCJwb3NpdGlvbiIsInNldE9wZW4iLCJ1c2VFZmZlY3QiLCJhZGRUb29sdGlwIiwiY29udGFpbmVyIiwiaW5zdGFuY2UiLCJvblRvb2x0aXBPcGVuIiwiZXZlbnQiLCJzZXRMYXRMbmciLCJ1cGRhdGUiLCJvblRvb2x0aXBDbG9zZSIsIm9uIiwidG9vbHRpcG9wZW4iLCJ0b29sdGlwY2xvc2UiLCJiaW5kVG9vbHRpcCIsInJlbW92ZVRvb2x0aXAiLCJvZmYiLCJfbWFwIiwidW5iaW5kVG9vbHRpcCIsImV4cG9ydHMiXSwic291cmNlcyI6WyJUb29sdGlwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUVsZW1lbnRPYmplY3QsIGNyZWF0ZU92ZXJsYXlDb21wb25lbnQgfSBmcm9tICdAcmVhY3QtbGVhZmxldC9jb3JlJztcbmltcG9ydCB7IFRvb2x0aXAgYXMgTGVhZmxldFRvb2x0aXAgfSBmcm9tICdsZWFmbGV0JztcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmV4cG9ydCBjb25zdCBUb29sdGlwID0gY3JlYXRlT3ZlcmxheUNvbXBvbmVudChmdW5jdGlvbiBjcmVhdGVUb29sdGlwKHByb3BzLCBjb250ZXh0KSB7XG4gICAgY29uc3QgdG9vbHRpcCA9IG5ldyBMZWFmbGV0VG9vbHRpcChwcm9wcywgY29udGV4dC5vdmVybGF5Q29udGFpbmVyKTtcbiAgICByZXR1cm4gY3JlYXRlRWxlbWVudE9iamVjdCh0b29sdGlwLCBjb250ZXh0KTtcbn0sIGZ1bmN0aW9uIHVzZVRvb2x0aXBMaWZlY3ljbGUoZWxlbWVudCwgY29udGV4dCwgeyBwb3NpdGlvbiAgfSwgc2V0T3Blbikge1xuICAgIHVzZUVmZmVjdChmdW5jdGlvbiBhZGRUb29sdGlwKCkge1xuICAgICAgICBjb25zdCBjb250YWluZXIgPSBjb250ZXh0Lm92ZXJsYXlDb250YWluZXI7XG4gICAgICAgIGlmIChjb250YWluZXIgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHsgaW5zdGFuY2UgIH0gPSBlbGVtZW50O1xuICAgICAgICBjb25zdCBvblRvb2x0aXBPcGVuID0gKGV2ZW50KT0+e1xuICAgICAgICAgICAgaWYgKGV2ZW50LnRvb2x0aXAgPT09IGluc3RhbmNlKSB7XG4gICAgICAgICAgICAgICAgaWYgKHBvc2l0aW9uICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgaW5zdGFuY2Uuc2V0TGF0TG5nKHBvc2l0aW9uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaW5zdGFuY2UudXBkYXRlKCk7XG4gICAgICAgICAgICAgICAgc2V0T3Blbih0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgY29uc3Qgb25Ub29sdGlwQ2xvc2UgPSAoZXZlbnQpPT57XG4gICAgICAgICAgICBpZiAoZXZlbnQudG9vbHRpcCA9PT0gaW5zdGFuY2UpIHtcbiAgICAgICAgICAgICAgICBzZXRPcGVuKGZhbHNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgY29udGFpbmVyLm9uKHtcbiAgICAgICAgICAgIHRvb2x0aXBvcGVuOiBvblRvb2x0aXBPcGVuLFxuICAgICAgICAgICAgdG9vbHRpcGNsb3NlOiBvblRvb2x0aXBDbG9zZVxuICAgICAgICB9KTtcbiAgICAgICAgY29udGFpbmVyLmJpbmRUb29sdGlwKGluc3RhbmNlKTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIHJlbW92ZVRvb2x0aXAoKSB7XG4gICAgICAgICAgICBjb250YWluZXIub2ZmKHtcbiAgICAgICAgICAgICAgICB0b29sdGlwb3Blbjogb25Ub29sdGlwT3BlbixcbiAgICAgICAgICAgICAgICB0b29sdGlwY2xvc2U6IG9uVG9vbHRpcENsb3NlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmUgcHJvdGVjdGVkIHByb3BlcnR5XG4gICAgICAgICAgICBpZiAoY29udGFpbmVyLl9tYXAgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGNvbnRhaW5lci51bmJpbmRUb29sdGlwKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSwgW1xuICAgICAgICBlbGVtZW50LFxuICAgICAgICBjb250ZXh0LFxuICAgICAgICBzZXRPcGVuLFxuICAgICAgICBwb3NpdGlvblxuICAgIF0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLEtBQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLFFBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLE1BQUEsR0FBQUYsT0FBQTtBQUNPLE1BQU1HLE9BQU8sR0FBRyxJQUFBQyw0QkFBc0IsRUFBQyxTQUFTQyxhQUFhQSxDQUFDQyxLQUFLLEVBQUVDLE9BQU8sRUFBRTtFQUNqRixNQUFNQyxPQUFPLEdBQUcsSUFBSUMsZ0JBQWMsQ0FBQ0gsS0FBSyxFQUFFQyxPQUFPLENBQUNHLGdCQUFnQixDQUFDO0VBQ25FLE9BQU8sSUFBQUMseUJBQW1CLEVBQUNILE9BQU8sRUFBRUQsT0FBTyxDQUFDO0FBQ2hELENBQUMsRUFBRSxTQUFTSyxtQkFBbUJBLENBQUNDLE9BQU8sRUFBRU4sT0FBTyxFQUFFO0VBQUVPO0FBQVUsQ0FBQyxFQUFFQyxPQUFPLEVBQUU7RUFDdEUsSUFBQUMsZ0JBQVMsRUFBQyxTQUFTQyxVQUFVQSxDQUFBLEVBQUc7SUFDNUIsTUFBTUMsU0FBUyxHQUFHWCxPQUFPLENBQUNHLGdCQUFnQjtJQUMxQyxJQUFJUSxTQUFTLElBQUksSUFBSSxFQUFFO01BQ25CO0lBQ0o7SUFDQSxNQUFNO01BQUVDO0lBQVUsQ0FBQyxHQUFHTixPQUFPO0lBQzdCLE1BQU1PLGFBQWEsR0FBSUMsS0FBSyxJQUFHO01BQzNCLElBQUlBLEtBQUssQ0FBQ2IsT0FBTyxLQUFLVyxRQUFRLEVBQUU7UUFDNUIsSUFBSUwsUUFBUSxJQUFJLElBQUksRUFBRTtVQUNsQkssUUFBUSxDQUFDRyxTQUFTLENBQUNSLFFBQVEsQ0FBQztRQUNoQztRQUNBSyxRQUFRLENBQUNJLE1BQU0sRUFBRTtRQUNqQlIsT0FBTyxDQUFDLElBQUksQ0FBQztNQUNqQjtJQUNKLENBQUM7SUFDRCxNQUFNUyxjQUFjLEdBQUlILEtBQUssSUFBRztNQUM1QixJQUFJQSxLQUFLLENBQUNiLE9BQU8sS0FBS1csUUFBUSxFQUFFO1FBQzVCSixPQUFPLENBQUMsS0FBSyxDQUFDO01BQ2xCO0lBQ0osQ0FBQztJQUNERyxTQUFTLENBQUNPLEVBQUUsQ0FBQztNQUNUQyxXQUFXLEVBQUVOLGFBQWE7TUFDMUJPLFlBQVksRUFBRUg7SUFDbEIsQ0FBQyxDQUFDO0lBQ0ZOLFNBQVMsQ0FBQ1UsV0FBVyxDQUFDVCxRQUFRLENBQUM7SUFDL0IsT0FBTyxTQUFTVSxhQUFhQSxDQUFBLEVBQUc7TUFDNUJYLFNBQVMsQ0FBQ1ksR0FBRyxDQUFDO1FBQ1ZKLFdBQVcsRUFBRU4sYUFBYTtRQUMxQk8sWUFBWSxFQUFFSDtNQUNsQixDQUFDLENBQUM7TUFDRjtNQUNBLElBQUlOLFNBQVMsQ0FBQ2EsSUFBSSxJQUFJLElBQUksRUFBRTtRQUN4QmIsU0FBUyxDQUFDYyxhQUFhLEVBQUU7TUFDN0I7SUFDSixDQUFDO0VBQ0wsQ0FBQyxFQUFFLENBQ0NuQixPQUFPLEVBQ1BOLE9BQU8sRUFDUFEsT0FBTyxFQUNQRCxRQUFRLENBQ1gsQ0FBQztBQUNOLENBQUMsQ0FBQztBQUFDbUIsT0FBQSxDQUFBOUIsT0FBQSxHQUFBQSxPQUFBIn0=