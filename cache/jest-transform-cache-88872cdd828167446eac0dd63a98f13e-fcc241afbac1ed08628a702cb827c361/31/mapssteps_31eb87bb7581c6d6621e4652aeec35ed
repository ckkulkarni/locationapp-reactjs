d195ac9209895325487496fa896eccc5
"use strict";

var _react = _interopRequireDefault(require("react"));
var _jestCucumber = require("jest-cucumber");
var _react2 = require("@testing-library/react");
require("text-encoding");
require("@testing-library/jest-dom/extend-expect");
var _reactRouterDom = require("react-router-dom");
var _Map = _interopRequireDefault(require("../../Map"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const feature = (0, _jestCucumber.loadFeature)("src/components/features/map.feature");
(0, _jestCucumber.defineFeature)(feature, test => {
  test("Viewing Location on the Map", ({
    given,
    when,
    then,
    and
  }) => {
    const locationState = {
      lat: 37.7749,
      lng: -122.4194,
      address: "123 Street, Hyd"
    };
    const screen = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRouterDom.MemoryRouter, {
      initialEntries: [{
        pathname: "/map",
        state: locationState
      }]
    }, /*#__PURE__*/_react.default.createElement(_Map.default, null)));
    given("the user is on the Map page", () => {
      const mapContainer = screen.getByTestId("map-container");
      expect(mapContainer).toBeInTheDocument();
    });
    when("the user should see a map displaying the specified location", () => {});
    and("the user should see a marker indicating the specified location", () => {
      const marker = screen.getByRole("img");
      expect(marker).toBeInTheDocument();
    });
    and("the user should see the address displayed prominently on the page", () => {});
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9qZXN0Q3VjdW1iZXIiLCJfcmVhY3QyIiwiX3JlYWN0Um91dGVyRG9tIiwiX01hcCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZmVhdHVyZSIsImxvYWRGZWF0dXJlIiwiZGVmaW5lRmVhdHVyZSIsInRlc3QiLCJnaXZlbiIsIndoZW4iLCJ0aGVuIiwiYW5kIiwibG9jYXRpb25TdGF0ZSIsImxhdCIsImxuZyIsImFkZHJlc3MiLCJzY3JlZW4iLCJyZW5kZXIiLCJjcmVhdGVFbGVtZW50IiwiTWVtb3J5Um91dGVyIiwiaW5pdGlhbEVudHJpZXMiLCJwYXRobmFtZSIsInN0YXRlIiwibWFwQ29udGFpbmVyIiwiZ2V0QnlUZXN0SWQiLCJleHBlY3QiLCJ0b0JlSW5UaGVEb2N1bWVudCIsIm1hcmtlciIsImdldEJ5Um9sZSJdLCJzb3VyY2VzIjpbIm1hcHMuc3RlcHMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgZGVmaW5lRmVhdHVyZSwgbG9hZEZlYXR1cmUgfSBmcm9tIFwiamVzdC1jdWN1bWJlclwiO1xyXG5pbXBvcnQgeyBmaXJlRXZlbnQsIHJlbmRlciwgd2FpdEZvciwgYWN0IH0gZnJvbSBcIkB0ZXN0aW5nLWxpYnJhcnkvcmVhY3RcIjtcclxuaW1wb3J0IFwidGV4dC1lbmNvZGluZ1wiO1xyXG5pbXBvcnQgXCJAdGVzdGluZy1saWJyYXJ5L2plc3QtZG9tL2V4dGVuZC1leHBlY3RcIjtcclxuaW1wb3J0IHtcclxuICBCcm93c2VyUm91dGVyIGFzIFJvdXRlcixcclxuICBSb3V0ZXMsXHJcbiAgUm91dGUsXHJcbiAgTWVtb3J5Um91dGVyLFxyXG59IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XHJcbmltcG9ydCBMb2NhdGlvbnMgZnJvbSBcIi4uLy4uL0xvY2F0aW9uc1wiO1xyXG5pbXBvcnQgTWFwIGZyb20gXCIuLi8uLi9NYXBcIjtcclxuY29uc3QgZmVhdHVyZSA9IGxvYWRGZWF0dXJlKFwic3JjL2NvbXBvbmVudHMvZmVhdHVyZXMvbWFwLmZlYXR1cmVcIik7XHJcblxyXG5kZWZpbmVGZWF0dXJlKGZlYXR1cmUsICh0ZXN0KSA9PiB7XHJcbiAgdGVzdChcIlZpZXdpbmcgTG9jYXRpb24gb24gdGhlIE1hcFwiLCAoeyBnaXZlbiwgd2hlbiwgdGhlbiwgYW5kIH0pID0+IHtcclxuICAgIGNvbnN0IGxvY2F0aW9uU3RhdGUgPSB7XHJcbiAgICAgIGxhdDogMzcuNzc0OSxcclxuICAgICAgbG5nOiAtMTIyLjQxOTQsXHJcbiAgICAgIGFkZHJlc3M6IFwiMTIzIFN0cmVldCwgSHlkXCIsXHJcbiAgICB9O1xyXG4gICAgY29uc3Qgc2NyZWVuID0gcmVuZGVyKFxyXG4gICAgICA8TWVtb3J5Um91dGVyXHJcbiAgICAgICAgaW5pdGlhbEVudHJpZXM9e1t7IHBhdGhuYW1lOiBcIi9tYXBcIiwgc3RhdGU6IGxvY2F0aW9uU3RhdGUgfV19XHJcbiAgICAgID5cclxuICAgICAgICA8TWFwIC8+XHJcbiAgICAgIDwvTWVtb3J5Um91dGVyPlxyXG4gICAgKTtcclxuICAgIGdpdmVuKFwidGhlIHVzZXIgaXMgb24gdGhlIE1hcCBwYWdlXCIsICgpID0+IHtcclxuICAgICAgY29uc3QgbWFwQ29udGFpbmVyID0gc2NyZWVuLmdldEJ5VGVzdElkKFwibWFwLWNvbnRhaW5lclwiKTtcclxuICAgICAgZXhwZWN0KG1hcENvbnRhaW5lcikudG9CZUluVGhlRG9jdW1lbnQoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHdoZW4oXHJcbiAgICAgIFwidGhlIHVzZXIgc2hvdWxkIHNlZSBhIG1hcCBkaXNwbGF5aW5nIHRoZSBzcGVjaWZpZWQgbG9jYXRpb25cIixcclxuICAgICAgKCkgPT4ge31cclxuICAgICk7XHJcblxyXG4gICAgYW5kKFxyXG4gICAgICBcInRoZSB1c2VyIHNob3VsZCBzZWUgYSBtYXJrZXIgaW5kaWNhdGluZyB0aGUgc3BlY2lmaWVkIGxvY2F0aW9uXCIsXHJcbiAgICAgICgpID0+IHtcclxuICAgICAgICBjb25zdCBtYXJrZXIgPSBzY3JlZW4uZ2V0QnlSb2xlKFwiaW1nXCIpO1xyXG4gICAgICAgIGV4cGVjdChtYXJrZXIpLnRvQmVJblRoZURvY3VtZW50KCk7XHJcbiAgICAgIH1cclxuICAgICk7XHJcblxyXG4gICAgYW5kKFxyXG4gICAgICBcInRoZSB1c2VyIHNob3VsZCBzZWUgdGhlIGFkZHJlc3MgZGlzcGxheWVkIHByb21pbmVudGx5IG9uIHRoZSBwYWdlXCIsXHJcbiAgICAgICgpID0+IHt9XHJcbiAgICApO1xyXG4gIH0pO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLGFBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLE9BQUEsR0FBQUYsT0FBQTtBQUNBQSxPQUFBO0FBQ0FBLE9BQUE7QUFDQSxJQUFBRyxlQUFBLEdBQUFILE9BQUE7QUFPQSxJQUFBSSxJQUFBLEdBQUFMLHNCQUFBLENBQUFDLE9BQUE7QUFBNEIsU0FBQUQsdUJBQUFNLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxLQUFBRSxPQUFBLEVBQUFGLEdBQUE7QUFDNUIsTUFBTUcsT0FBTyxHQUFHLElBQUFDLHlCQUFXLEVBQUMscUNBQXFDLENBQUM7QUFFbEUsSUFBQUMsMkJBQWEsRUFBQ0YsT0FBTyxFQUFHRyxJQUFJLElBQUs7RUFDL0JBLElBQUksQ0FBQyw2QkFBNkIsRUFBRSxDQUFDO0lBQUVDLEtBQUs7SUFBRUMsSUFBSTtJQUFFQyxJQUFJO0lBQUVDO0VBQUksQ0FBQyxLQUFLO0lBQ2xFLE1BQU1DLGFBQWEsR0FBRztNQUNwQkMsR0FBRyxFQUFFLE9BQU87TUFDWkMsR0FBRyxFQUFFLENBQUMsUUFBUTtNQUNkQyxPQUFPLEVBQUU7SUFDWCxDQUFDO0lBQ0QsTUFBTUMsTUFBTSxHQUFHLElBQUFDLGNBQU0sZ0JBQ25CdkIsTUFBQSxDQUFBUyxPQUFBLENBQUFlLGFBQUEsQ0FBQ25CLGVBQUEsQ0FBQW9CLFlBQVk7TUFDWEMsY0FBYyxFQUFFLENBQUM7UUFBRUMsUUFBUSxFQUFFLE1BQU07UUFBRUMsS0FBSyxFQUFFVjtNQUFjLENBQUM7SUFBRSxnQkFFN0RsQixNQUFBLENBQUFTLE9BQUEsQ0FBQWUsYUFBQSxDQUFDbEIsSUFBQSxDQUFBRyxPQUFHLE9BQUcsQ0FDTSxDQUNoQjtJQUNESyxLQUFLLENBQUMsNkJBQTZCLEVBQUUsTUFBTTtNQUN6QyxNQUFNZSxZQUFZLEdBQUdQLE1BQU0sQ0FBQ1EsV0FBVyxDQUFDLGVBQWUsQ0FBQztNQUN4REMsTUFBTSxDQUFDRixZQUFZLENBQUMsQ0FBQ0csaUJBQWlCLEVBQUU7SUFDMUMsQ0FBQyxDQUFDO0lBRUZqQixJQUFJLENBQ0YsNkRBQTZELEVBQzdELE1BQU0sQ0FBQyxDQUFDLENBQ1Q7SUFFREUsR0FBRyxDQUNELGdFQUFnRSxFQUNoRSxNQUFNO01BQ0osTUFBTWdCLE1BQU0sR0FBR1gsTUFBTSxDQUFDWSxTQUFTLENBQUMsS0FBSyxDQUFDO01BQ3RDSCxNQUFNLENBQUNFLE1BQU0sQ0FBQyxDQUFDRCxpQkFBaUIsRUFBRTtJQUNwQyxDQUFDLENBQ0Y7SUFFRGYsR0FBRyxDQUNELG1FQUFtRSxFQUNuRSxNQUFNLENBQUMsQ0FBQyxDQUNUO0VBQ0gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDIn0=