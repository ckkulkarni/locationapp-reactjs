{"version":3,"names":["_getJestObj","mock","_react","_interopRequireDefault","require","_jestCucumber","_react2","_reactRedux","_toolkit","_locationSlice","_reactRouterDom","_Locations","_Map","_axios","obj","__esModule","default","jest","feature","loadFeature","defineFeature","test","store","configureStore","reducer","locationList","locationSlice","mockPosition","coords","latitude","longitude","mockAddressResponse","data","results","formatted_address","axios","get","mockResolvedValueOnce","mockGeolocation","getCurrentPosition","fn","successCallback","Object","defineProperty","global","navigator","value","configurable","screen","render","createElement","Provider","MemoryRouter","initialEntries","Routes","Route","path","element","given","when","then","and","waitFor","expect","toBeDefined","locationsContainer","getByTestId","toBeInTheDocument","getByText","currentDateTime","Date","toLocaleString","clearAllButton","getByRole","name"],"sources":["locations.steps.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { defineFeature, loadFeature } from \"jest-cucumber\";\r\nimport { fireEvent, render, waitFor, act } from \"@testing-library/react\";\r\nimport \"text-encoding\";\r\nimport \"@testing-library/jest-dom/extend-expect\";\r\nimport { Provider } from \"react-redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport locationSlice, {\r\n  addPreviousLocation,\r\n  clearPreviousLocations,\r\n  removePreviousLocation,\r\n  setCurrentLocation,\r\n} from \"./../../reducers/reducer/locationSlice\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  MemoryRouter,\r\n} from \"react-router-dom\";\r\nimport Locations from \"../../Locations\";\r\nimport Map from \"../../Map\";\r\nimport axios from \"axios\";\r\njest.mock(\"axios\");\r\nconst feature = loadFeature(\"src/components/features/locations.feature\");\r\n\r\ndefineFeature(feature, (test) => {\r\n  const store = configureStore({\r\n    reducer: {\r\n      locationList: locationSlice,\r\n    },\r\n  });\r\n  const mockPosition = {\r\n    coords: {\r\n      latitude: 37.7749,\r\n      longitude: -122.4194,\r\n    },\r\n  };\r\n  const mockAddressResponse = {\r\n    data: {\r\n      results: [\r\n        {\r\n          formatted_address: \"123 Street, Hyd\",\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  (axios.get as jest.Mock).mockResolvedValueOnce(mockAddressResponse);\r\n  const mockGeolocation = {\r\n    getCurrentPosition: jest.fn((successCallback) => {\r\n      successCallback(mockPosition);\r\n    }),\r\n  };\r\n\r\n  Object.defineProperty(global.navigator, \"geolocation\", {\r\n    value: mockGeolocation,\r\n    configurable: true,\r\n  });\r\n\r\n  const screen = render(\r\n    <Provider store={store}>\r\n      <MemoryRouter initialEntries={[\"/\"]}>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Locations />} />\r\n          <Route path=\"/map\" element={<Map />} />\r\n        </Routes>\r\n      </MemoryRouter>\r\n    </Provider>\r\n  );\r\n  test(\"Displaying Current Location\", ({ given, when, then, and }) => {\r\n    given(\"the user is on the Locations page\", async () => {\r\n      await waitFor(() => {\r\n        expect(screen).toBeDefined();\r\n        const locationsContainer = screen.getByTestId(\"location-container\");\r\n        expect(locationsContainer).toBeInTheDocument();\r\n      });\r\n    });\r\n    when(\"the page loads\", () => {\r\n      expect(screen).toBeDefined();\r\n    });\r\n    then(\"the user should see Current Location address\", () => {\r\n      expect(screen.getByText(\"Current Location\")).toBeInTheDocument();\r\n      expect(screen.getByText(\"123 Street, Hyd\")).toBeInTheDocument();\r\n    });\r\n    and(\"the user should see the date and time of the current location\", () => {\r\n      const currentDateTime = new Date().toLocaleString();\r\n      expect(screen.getByText(currentDateTime)).toBeInTheDocument();\r\n    });\r\n    and('the user should see a \"Clear All Locations\" button', () => {\r\n      const clearAllButton = screen.getByRole(\"button\", {\r\n        name: \"Clear All Locations\",\r\n      });\r\n    });\r\n  });\r\n  test(\"Displaying Previous Locations\", ({ given, when, then, and }) => {\r\n    given(\"the user is on the Locations page\", async () => {\r\n      await waitFor(() => {\r\n        expect(screen).toBeDefined();\r\n        const locationsContainer = screen.getByTestId(\"location-container\");\r\n        expect(locationsContainer).toBeInTheDocument();\r\n      });\r\n    });\r\n  });\r\n});\r\n"],"mappings":"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"}