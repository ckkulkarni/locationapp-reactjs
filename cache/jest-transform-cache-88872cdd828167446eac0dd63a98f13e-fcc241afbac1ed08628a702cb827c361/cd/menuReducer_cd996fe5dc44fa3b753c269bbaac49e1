a694ed575929f61dbd96807b9a4a38c7
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.menuReducer = menuReducer;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _useList = require("../useList");
function menuReducer(state, action) {
  if (action.type === _useList.ListActionTypes.itemHover) {
    return state;
  }
  const newState = (0, _useList.listReducer)(state, action);

  // make sure an item is always highlighted
  if (newState.highlightedValue === null && action.context.items.length > 0) {
    return (0, _extends2.default)({}, newState, {
      highlightedValue: action.context.items[0]
    });
  }
  if (action.type === _useList.ListActionTypes.keyDown) {
    if (action.event.key === 'Escape') {
      return (0, _extends2.default)({}, newState, {
        open: false
      });
    }
  }
  if (action.type === _useList.ListActionTypes.blur) {
    var _action$context$listb;
    if (!((_action$context$listb = action.context.listboxRef.current) != null && _action$context$listb.contains(action.event.relatedTarget))) {
      var _action$context$listb2, _action$event$related;
      // To prevent the menu from closing when the focus leaves the menu to the button.
      // For more details, see https://github.com/mui/material-ui/pull/36917#issuecomment-1566992698
      const listboxId = (_action$context$listb2 = action.context.listboxRef.current) == null ? void 0 : _action$context$listb2.getAttribute('id');
      const controlledBy = (_action$event$related = action.event.relatedTarget) == null ? void 0 : _action$event$related.getAttribute('aria-controls');
      if (listboxId && controlledBy && listboxId === controlledBy) {
        return newState;
      }
      return (0, _extends2.default)({}, newState, {
        open: false,
        highlightedValue: action.context.items[0]
      });
    }
  }
  return newState;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwibWVudVJlZHVjZXIiLCJfZXh0ZW5kczIiLCJfdXNlTGlzdCIsInN0YXRlIiwiYWN0aW9uIiwidHlwZSIsIkxpc3RBY3Rpb25UeXBlcyIsIml0ZW1Ib3ZlciIsIm5ld1N0YXRlIiwibGlzdFJlZHVjZXIiLCJoaWdobGlnaHRlZFZhbHVlIiwiY29udGV4dCIsIml0ZW1zIiwibGVuZ3RoIiwiZGVmYXVsdCIsImtleURvd24iLCJldmVudCIsImtleSIsIm9wZW4iLCJibHVyIiwiX2FjdGlvbiRjb250ZXh0JGxpc3RiIiwibGlzdGJveFJlZiIsImN1cnJlbnQiLCJjb250YWlucyIsInJlbGF0ZWRUYXJnZXQiLCJfYWN0aW9uJGNvbnRleHQkbGlzdGIyIiwiX2FjdGlvbiRldmVudCRyZWxhdGVkIiwibGlzdGJveElkIiwiZ2V0QXR0cmlidXRlIiwiY29udHJvbGxlZEJ5Il0sInNvdXJjZXMiOlsibWVudVJlZHVjZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0ID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMubWVudVJlZHVjZXIgPSBtZW51UmVkdWNlcjtcbnZhciBfZXh0ZW5kczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2V4dGVuZHNcIikpO1xudmFyIF91c2VMaXN0ID0gcmVxdWlyZShcIi4uL3VzZUxpc3RcIik7XG5mdW5jdGlvbiBtZW51UmVkdWNlcihzdGF0ZSwgYWN0aW9uKSB7XG4gIGlmIChhY3Rpb24udHlwZSA9PT0gX3VzZUxpc3QuTGlzdEFjdGlvblR5cGVzLml0ZW1Ib3Zlcikge1xuICAgIHJldHVybiBzdGF0ZTtcbiAgfVxuICBjb25zdCBuZXdTdGF0ZSA9ICgwLCBfdXNlTGlzdC5saXN0UmVkdWNlcikoc3RhdGUsIGFjdGlvbik7XG5cbiAgLy8gbWFrZSBzdXJlIGFuIGl0ZW0gaXMgYWx3YXlzIGhpZ2hsaWdodGVkXG4gIGlmIChuZXdTdGF0ZS5oaWdobGlnaHRlZFZhbHVlID09PSBudWxsICYmIGFjdGlvbi5jb250ZXh0Lml0ZW1zLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gKDAsIF9leHRlbmRzMi5kZWZhdWx0KSh7fSwgbmV3U3RhdGUsIHtcbiAgICAgIGhpZ2hsaWdodGVkVmFsdWU6IGFjdGlvbi5jb250ZXh0Lml0ZW1zWzBdXG4gICAgfSk7XG4gIH1cbiAgaWYgKGFjdGlvbi50eXBlID09PSBfdXNlTGlzdC5MaXN0QWN0aW9uVHlwZXMua2V5RG93bikge1xuICAgIGlmIChhY3Rpb24uZXZlbnQua2V5ID09PSAnRXNjYXBlJykge1xuICAgICAgcmV0dXJuICgwLCBfZXh0ZW5kczIuZGVmYXVsdCkoe30sIG5ld1N0YXRlLCB7XG4gICAgICAgIG9wZW46IGZhbHNlXG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgaWYgKGFjdGlvbi50eXBlID09PSBfdXNlTGlzdC5MaXN0QWN0aW9uVHlwZXMuYmx1cikge1xuICAgIHZhciBfYWN0aW9uJGNvbnRleHQkbGlzdGI7XG4gICAgaWYgKCEoKF9hY3Rpb24kY29udGV4dCRsaXN0YiA9IGFjdGlvbi5jb250ZXh0Lmxpc3Rib3hSZWYuY3VycmVudCkgIT0gbnVsbCAmJiBfYWN0aW9uJGNvbnRleHQkbGlzdGIuY29udGFpbnMoYWN0aW9uLmV2ZW50LnJlbGF0ZWRUYXJnZXQpKSkge1xuICAgICAgdmFyIF9hY3Rpb24kY29udGV4dCRsaXN0YjIsIF9hY3Rpb24kZXZlbnQkcmVsYXRlZDtcbiAgICAgIC8vIFRvIHByZXZlbnQgdGhlIG1lbnUgZnJvbSBjbG9zaW5nIHdoZW4gdGhlIGZvY3VzIGxlYXZlcyB0aGUgbWVudSB0byB0aGUgYnV0dG9uLlxuICAgICAgLy8gRm9yIG1vcmUgZGV0YWlscywgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9tdWkvbWF0ZXJpYWwtdWkvcHVsbC8zNjkxNyNpc3N1ZWNvbW1lbnQtMTU2Njk5MjY5OFxuICAgICAgY29uc3QgbGlzdGJveElkID0gKF9hY3Rpb24kY29udGV4dCRsaXN0YjIgPSBhY3Rpb24uY29udGV4dC5saXN0Ym94UmVmLmN1cnJlbnQpID09IG51bGwgPyB2b2lkIDAgOiBfYWN0aW9uJGNvbnRleHQkbGlzdGIyLmdldEF0dHJpYnV0ZSgnaWQnKTtcbiAgICAgIGNvbnN0IGNvbnRyb2xsZWRCeSA9IChfYWN0aW9uJGV2ZW50JHJlbGF0ZWQgPSBhY3Rpb24uZXZlbnQucmVsYXRlZFRhcmdldCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hY3Rpb24kZXZlbnQkcmVsYXRlZC5nZXRBdHRyaWJ1dGUoJ2FyaWEtY29udHJvbHMnKTtcbiAgICAgIGlmIChsaXN0Ym94SWQgJiYgY29udHJvbGxlZEJ5ICYmIGxpc3Rib3hJZCA9PT0gY29udHJvbGxlZEJ5KSB7XG4gICAgICAgIHJldHVybiBuZXdTdGF0ZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiAoMCwgX2V4dGVuZHMyLmRlZmF1bHQpKHt9LCBuZXdTdGF0ZSwge1xuICAgICAgICBvcGVuOiBmYWxzZSxcbiAgICAgICAgaGlnaGxpZ2h0ZWRWYWx1ZTogYWN0aW9uLmNvbnRleHQuaXRlbXNbMF1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbmV3U3RhdGU7XG59Il0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUVaLElBQUlBLHNCQUFzQixHQUFHQyxPQUFPLENBQUMsOENBQThDLENBQUM7QUFDcEZDLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDQyxPQUFPLEVBQUUsWUFBWSxFQUFFO0VBQzNDQyxLQUFLLEVBQUU7QUFDVCxDQUFDLENB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