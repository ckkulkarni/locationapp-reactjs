284c8635247645b3af57875c9874bd80
"use strict";
'use client';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  appendOwnerState: true,
  areArraysEqual: true,
  ClassNameConfigurator: true,
  extractEventHandlers: true,
  isHostComponent: true,
  resolveComponentProps: true,
  useSlotProps: true,
  mergeSlotProps: true
};
Object.defineProperty(exports, "ClassNameConfigurator", {
  enumerable: true,
  get: function () {
    return _ClassNameConfigurator.ClassNameConfigurator;
  }
});
Object.defineProperty(exports, "appendOwnerState", {
  enumerable: true,
  get: function () {
    return _appendOwnerState.appendOwnerState;
  }
});
Object.defineProperty(exports, "areArraysEqual", {
  enumerable: true,
  get: function () {
    return _areArraysEqual.areArraysEqual;
  }
});
Object.defineProperty(exports, "extractEventHandlers", {
  enumerable: true,
  get: function () {
    return _extractEventHandlers.extractEventHandlers;
  }
});
Object.defineProperty(exports, "isHostComponent", {
  enumerable: true,
  get: function () {
    return _isHostComponent.isHostComponent;
  }
});
Object.defineProperty(exports, "mergeSlotProps", {
  enumerable: true,
  get: function () {
    return _mergeSlotProps.mergeSlotProps;
  }
});
Object.defineProperty(exports, "resolveComponentProps", {
  enumerable: true,
  get: function () {
    return _resolveComponentProps.resolveComponentProps;
  }
});
Object.defineProperty(exports, "useSlotProps", {
  enumerable: true,
  get: function () {
    return _useSlotProps.useSlotProps;
  }
});
var _appendOwnerState = require("./appendOwnerState");
var _areArraysEqual = require("./areArraysEqual");
var _ClassNameConfigurator = require("./ClassNameConfigurator");
var _extractEventHandlers = require("./extractEventHandlers");
var _isHostComponent = require("./isHostComponent");
var _resolveComponentProps = require("./resolveComponentProps");
var _useSlotProps = require("./useSlotProps");
var _mergeSlotProps = require("./mergeSlotProps");
var _PolymorphicComponent = require("./PolymorphicComponent");
Object.keys(_PolymorphicComponent).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _PolymorphicComponent[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _PolymorphicComponent[key];
    }
  });
});
var _types = require("./types");
Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _types[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _types[key];
    }
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9leHBvcnROYW1lcyIsImFwcGVuZE93bmVyU3RhdGUiLCJhcmVBcnJheXNFcXVhbCIsIkNsYXNzTmFtZUNvbmZpZ3VyYXRvciIsImV4dHJhY3RFdmVudEhhbmRsZXJzIiwiaXNIb3N0Q29tcG9uZW50IiwicmVzb2x2ZUNvbXBvbmVudFByb3BzIiwidXNlU2xvdFByb3BzIiwibWVyZ2VTbG90UHJvcHMiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX0NsYXNzTmFtZUNvbmZpZ3VyYXRvciIsIl9hcHBlbmRPd25lclN0YXRlIiwiX2FyZUFycmF5c0VxdWFsIiwiX2V4dHJhY3RFdmVudEhhbmRsZXJzIiwiX2lzSG9zdENvbXBvbmVudCIsIl9tZXJnZVNsb3RQcm9wcyIsIl9yZXNvbHZlQ29tcG9uZW50UHJvcHMiLCJfdXNlU2xvdFByb3BzIiwicmVxdWlyZSIsIl9Qb2x5bW9ycGhpY0NvbXBvbmVudCIsImtleXMiLCJmb3JFYWNoIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiX3R5cGVzIl0sInNvdXJjZXMiOlsiaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4ndXNlIGNsaWVudCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG52YXIgX2V4cG9ydE5hbWVzID0ge1xuICBhcHBlbmRPd25lclN0YXRlOiB0cnVlLFxuICBhcmVBcnJheXNFcXVhbDogdHJ1ZSxcbiAgQ2xhc3NOYW1lQ29uZmlndXJhdG9yOiB0cnVlLFxuICBleHRyYWN0RXZlbnRIYW5kbGVyczogdHJ1ZSxcbiAgaXNIb3N0Q29tcG9uZW50OiB0cnVlLFxuICByZXNvbHZlQ29tcG9uZW50UHJvcHM6IHRydWUsXG4gIHVzZVNsb3RQcm9wczogdHJ1ZSxcbiAgbWVyZ2VTbG90UHJvcHM6IHRydWVcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDbGFzc05hbWVDb25maWd1cmF0b3JcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX0NsYXNzTmFtZUNvbmZpZ3VyYXRvci5DbGFzc05hbWVDb25maWd1cmF0b3I7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYXBwZW5kT3duZXJTdGF0ZVwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfYXBwZW5kT3duZXJTdGF0ZS5hcHBlbmRPd25lclN0YXRlO1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImFyZUFycmF5c0VxdWFsXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF9hcmVBcnJheXNFcXVhbC5hcmVBcnJheXNFcXVhbDtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJleHRyYWN0RXZlbnRIYW5kbGVyc1wiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfZXh0cmFjdEV2ZW50SGFuZGxlcnMuZXh0cmFjdEV2ZW50SGFuZGxlcnM7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNIb3N0Q29tcG9uZW50XCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF9pc0hvc3RDb21wb25lbnQuaXNIb3N0Q29tcG9uZW50O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIm1lcmdlU2xvdFByb3BzXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF9tZXJnZVNsb3RQcm9wcy5tZXJnZVNsb3RQcm9wcztcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJyZXNvbHZlQ29tcG9uZW50UHJvcHNcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX3Jlc29sdmVDb21wb25lbnRQcm9wcy5yZXNvbHZlQ29tcG9uZW50UHJvcHM7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidXNlU2xvdFByb3BzXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF91c2VTbG90UHJvcHMudXNlU2xvdFByb3BzO1xuICB9XG59KTtcbnZhciBfYXBwZW5kT3duZXJTdGF0ZSA9IHJlcXVpcmUoXCIuL2FwcGVuZE93bmVyU3RhdGVcIik7XG52YXIgX2FyZUFycmF5c0VxdWFsID0gcmVxdWlyZShcIi4vYXJlQXJyYXlzRXF1YWxcIik7XG52YXIgX0NsYXNzTmFtZUNvbmZpZ3VyYXRvciA9IHJlcXVpcmUoXCIuL0NsYXNzTmFtZUNvbmZpZ3VyYXRvclwiKTtcbnZhciBfZXh0cmFjdEV2ZW50SGFuZGxlcnMgPSByZXF1aXJlKFwiLi9leHRyYWN0RXZlbnRIYW5kbGVyc1wiKTtcbnZhciBfaXNIb3N0Q29tcG9uZW50ID0gcmVxdWlyZShcIi4vaXNIb3N0Q29tcG9uZW50XCIpO1xudmFyIF9yZXNvbHZlQ29tcG9uZW50UHJvcHMgPSByZXF1aXJlKFwiLi9yZXNvbHZlQ29tcG9uZW50UHJvcHNcIik7XG52YXIgX3VzZVNsb3RQcm9wcyA9IHJlcXVpcmUoXCIuL3VzZVNsb3RQcm9wc1wiKTtcbnZhciBfbWVyZ2VTbG90UHJvcHMgPSByZXF1aXJlKFwiLi9tZXJnZVNsb3RQcm9wc1wiKTtcbnZhciBfUG9seW1vcnBoaWNDb21wb25lbnQgPSByZXF1aXJlKFwiLi9Qb2x5bW9ycGhpY0NvbXBvbmVudFwiKTtcbk9iamVjdC5rZXlzKF9Qb2x5bW9ycGhpY0NvbXBvbmVudCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChfZXhwb3J0TmFtZXMsIGtleSkpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX1BvbHltb3JwaGljQ29tcG9uZW50W2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gX1BvbHltb3JwaGljQ29tcG9uZW50W2tleV07XG4gICAgfVxuICB9KTtcbn0pO1xudmFyIF90eXBlcyA9IHJlcXVpcmUoXCIuL3R5cGVzXCIpO1xuT2JqZWN0LmtleXMoX3R5cGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgaWYgKGtleSA9PT0gXCJkZWZhdWx0XCIgfHwga2V5ID09PSBcIl9fZXNNb2R1bGVcIikgcmV0dXJuO1xuICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKF9leHBvcnROYW1lcywga2V5KSkgcmV0dXJuO1xuICBpZiAoa2V5IGluIGV4cG9ydHMgJiYgZXhwb3J0c1trZXldID09PSBfdHlwZXNba2V5XSkgcmV0dXJuO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBfdHlwZXNba2V5XTtcbiAgICB9XG4gIH0pO1xufSk7Il0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZO0FBQ1osWUFBWTs7QUFF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