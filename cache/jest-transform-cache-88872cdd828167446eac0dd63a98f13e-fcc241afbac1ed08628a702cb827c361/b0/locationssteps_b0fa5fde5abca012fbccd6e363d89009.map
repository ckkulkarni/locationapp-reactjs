{"version":3,"names":["_getJestObj","mock","_react","_interopRequireDefault","require","_jestCucumber","_react2","_reactRedux","_toolkit","_locationSlice","_reactRouterDom","_Locations","_Map","_axios","obj","__esModule","default","jest","feature","loadFeature","defineFeature","test","afterEach","cleanup","clearAllMocks","given","when","then","and","store","configureStore","reducer","locationList","locationSlice","mockPosition","coords","latitude","longitude","mockAddressResponse","data","results","formatted_address","axios","get","mockResolvedValueOnce","mockGeolocation","getCurrentPosition","fn","successCallback","Object","defineProperty","global","navigator","value","configurable","screen","render","createElement","Provider","MemoryRouter","initialEntries","Routes","Route","path","element","waitFor","expect","toBeDefined","locationsContainer","getAllByTestId","toBeInTheDocument","getByText","currentDateTime","Date","toLocaleString","clearAllButton","getByRole","name","getByTestId"],"sources":["locations.steps.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { defineFeature, loadFeature } from \"jest-cucumber\";\r\nimport {\r\n  fireEvent,\r\n  render,\r\n  waitFor,\r\n  act,\r\n  cleanup,\r\n} from \"@testing-library/react\";\r\nimport \"text-encoding\";\r\nimport \"@testing-library/jest-dom/extend-expect\";\r\nimport { Provider } from \"react-redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport locationSlice, {\r\n  addPreviousLocation,\r\n  clearPreviousLocations,\r\n  removePreviousLocation,\r\n  setCurrentLocation,\r\n} from \"./../../reducers/reducer/locationSlice\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  MemoryRouter,\r\n} from \"react-router-dom\";\r\nimport Locations from \"../../Locations\";\r\nimport Map from \"../../Map\";\r\nimport axios from \"axios\";\r\njest.mock(\"axios\");\r\nconst feature = loadFeature(\"src/components/features/locations.feature\");\r\n\r\ndefineFeature(feature, (test) => {\r\n  afterEach(() => {\r\n    cleanup();\r\n    jest.clearAllMocks();\r\n  });\r\n  test(\"Displaying Current Location\", ({ given, when, then, and }) => {\r\n    const store = configureStore({\r\n      reducer: {\r\n        locationList: locationSlice,\r\n      },\r\n    });\r\n    const mockPosition = {\r\n      coords: {\r\n        latitude: 37.7749,\r\n        longitude: -122.4194,\r\n      },\r\n    };\r\n    const mockAddressResponse = {\r\n      data: {\r\n        results: [\r\n          {\r\n            formatted_address: \"123 Street, Hyd\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    (axios.get as jest.Mock).mockResolvedValueOnce(mockAddressResponse);\r\n    const mockGeolocation = {\r\n      getCurrentPosition: jest.fn((successCallback) => {\r\n        successCallback(mockPosition);\r\n      }),\r\n    };\r\n\r\n    Object.defineProperty(global.navigator, \"geolocation\", {\r\n      value: mockGeolocation,\r\n      configurable: true,\r\n    });\r\n\r\n    const screen = render(\r\n      <Provider store={store}>\r\n        <MemoryRouter initialEntries={[\"/\"]}>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Locations />} />\r\n            <Route path=\"/map\" element={<Map />} />\r\n          </Routes>\r\n        </MemoryRouter>\r\n      </Provider>\r\n    );\r\n\r\n    given(\"the user is on the Locations page\", async () => {\r\n      await waitFor(() => {\r\n        expect(screen).toBeDefined();\r\n        const locationsContainer = screen.getAllByTestId(\"location-container\");\r\n        expect(locationsContainer[0]).toBeInTheDocument();\r\n      });\r\n    });\r\n    when(\"the page loads\", () => {\r\n      expect(screen).toBeDefined();\r\n    });\r\n    then(\"the user should see Current Location address\", () => {\r\n      expect(screen.getByText(\"Current Location\")).toBeInTheDocument();\r\n      expect(screen.getByText(\"123 Street, Hyd\")).toBeInTheDocument();\r\n    });\r\n    and(\"the user should see the date and time of the current location\", () => {\r\n      const currentDateTime = new Date().toLocaleString();\r\n      expect(screen.getByText(currentDateTime)).toBeInTheDocument();\r\n    });\r\n    and('the user should see a \"Clear All Locations\" button', () => {\r\n      const clearAllButton = screen.getByRole(\"button\", {\r\n        name: \"Clear All Locations\",\r\n      });\r\n    });\r\n  });\r\n  test(\"Displaying Previous Locations\", ({ given, when, then, and }) => {\r\n    const store = configureStore({\r\n      reducer: {\r\n        locationList: locationSlice,\r\n      },\r\n    });\r\n    const mockPosition = {\r\n      coords: {\r\n        latitude: 37.7749,\r\n        longitude: -122.4194,\r\n      },\r\n    };\r\n    const mockAddressResponse = {\r\n      data: {\r\n        results: [\r\n          {\r\n            formatted_address: \"123 Street, Hyd\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    (axios.get as jest.Mock).mockResolvedValueOnce(mockAddressResponse);\r\n    const mockGeolocation = {\r\n      getCurrentPosition: jest.fn((successCallback) => {\r\n        successCallback(mockPosition);\r\n      }),\r\n    };\r\n\r\n    Object.defineProperty(global.navigator, \"geolocation\", {\r\n      value: mockGeolocation,\r\n      configurable: true,\r\n    });\r\n\r\n    const screen = render(\r\n      <Provider store={store}>\r\n        <MemoryRouter initialEntries={[\"/\"]}>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Locations />} />\r\n            <Route path=\"/map\" element={<Map />} />\r\n          </Routes>\r\n        </MemoryRouter>\r\n      </Provider>\r\n    );\r\n\r\n    given(\"the user is on the Locations page\", async () => {\r\n      await waitFor(() => {\r\n        expect(screen).toBeDefined();\r\n        const locationsContainer = screen.getByTestId(\"location-container\");\r\n        expect(locationsContainer).toBeInTheDocument();\r\n      });\r\n    });\r\n  });\r\n});\r\n"],"mappings":"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"}