7ea1c866ff14aff74e541cf53a6f3e0b
"use strict";

var _react = _interopRequireDefault(require("react"));
require("text-encoding");
var _reactRouterDom = require("react-router-dom");
var _jestCucumber = require("jest-cucumber");
var _react2 = require("@testing-library/react");
var _locationSlice = _interopRequireDefault(require("./../../reducers/reducer/locationSlice"));
var _Locations = _interopRequireDefault(require("../../Locations"));
require("@testing-library/jest-dom/extend-expect");
var _Map = _interopRequireDefault(require("../../Map"));
var _reactRedux = require("react-redux");
var _toolkit = require("@reduxjs/toolkit");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const feature = (0, _jestCucumber.loadFeature)("src/components/features/locations.feature");
let store;
(0, _jestCucumber.defineFeature)(feature, test => {
  test("Displaying Current Location", ({
    given,
    when,
    then
  }) => {
    store = (0, _toolkit.configureStore)({
      reducer: {
        locationList: _locationSlice.default
      }
    });
    given("the user is on the Locations page", () => {
      const screen = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
        store: store
      }, /*#__PURE__*/_react.default.createElement(_reactRouterDom.MemoryRouter, null, /*#__PURE__*/_react.default.createElement(_Locations.default, null), /*#__PURE__*/_react.default.createElement(_Map.default, null))));
      expect(screen).toBeTruthy();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdFJvdXRlckRvbSIsIl9qZXN0Q3VjdW1iZXIiLCJfcmVhY3QyIiwiX2xvY2F0aW9uU2xpY2UiLCJfTG9jYXRpb25zIiwiX01hcCIsIl9yZWFjdFJlZHV4IiwiX3Rvb2xraXQiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImZlYXR1cmUiLCJsb2FkRmVhdHVyZSIsInN0b3JlIiwiZGVmaW5lRmVhdHVyZSIsInRlc3QiLCJnaXZlbiIsIndoZW4iLCJ0aGVuIiwiY29uZmlndXJlU3RvcmUiLCJyZWR1Y2VyIiwibG9jYXRpb25MaXN0IiwibG9jYXRpb25TbGljZSIsInNjcmVlbiIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJQcm92aWRlciIsIk1lbW9yeVJvdXRlciIsImV4cGVjdCIsInRvQmVUcnV0aHkiXSwic291cmNlcyI6WyJsb2NhdGlvbnMuc3RlcHMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IFwidGV4dC1lbmNvZGluZ1wiO1xyXG5pbXBvcnQge1xyXG4gIEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyLFxyXG4gIFJvdXRlcyxcclxuICBSb3V0ZSxcclxuICBNZW1vcnlSb3V0ZXIsXHJcbn0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcclxuaW1wb3J0IHsgZGVmaW5lRmVhdHVyZSwgbG9hZEZlYXR1cmUgfSBmcm9tIFwiamVzdC1jdWN1bWJlclwiO1xyXG5pbXBvcnQgeyBmaXJlRXZlbnQsIHJlbmRlciwgd2FpdEZvciB9IGZyb20gXCJAdGVzdGluZy1saWJyYXJ5L3JlYWN0XCI7XHJcbmltcG9ydCBsb2NhdGlvblNsaWNlLCB7XHJcbiAgYWRkUHJldmlvdXNMb2NhdGlvbixcclxuICBzZXRDdXJyZW50TG9jYXRpb24sXHJcbiAgcmVtb3ZlUHJldmlvdXNMb2NhdGlvbixcclxuICBjbGVhclByZXZpb3VzTG9jYXRpb25zLFxyXG59IGZyb20gXCIuLy4uLy4uL3JlZHVjZXJzL3JlZHVjZXIvbG9jYXRpb25TbGljZVwiO1xyXG5pbXBvcnQgTG9jYXRpb25zIGZyb20gXCIuLi8uLi9Mb2NhdGlvbnNcIjtcclxuaW1wb3J0IFwiQHRlc3RpbmctbGlicmFyeS9qZXN0LWRvbS9leHRlbmQtZXhwZWN0XCI7XHJcbmltcG9ydCBNYXAgZnJvbSBcIi4uLy4uL01hcFwiO1xyXG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xyXG5pbXBvcnQgeyBjb25maWd1cmVTdG9yZSB9IGZyb20gXCJAcmVkdXhqcy90b29sa2l0XCI7XHJcbmNvbnN0IGZlYXR1cmUgPSBsb2FkRmVhdHVyZShcInNyYy9jb21wb25lbnRzL2ZlYXR1cmVzL2xvY2F0aW9ucy5mZWF0dXJlXCIpO1xyXG5sZXQgc3RvcmU6IGFueTtcclxuZGVmaW5lRmVhdHVyZShmZWF0dXJlLCAodGVzdCkgPT4ge1xyXG4gIHRlc3QoXCJEaXNwbGF5aW5nIEN1cnJlbnQgTG9jYXRpb25cIiwgKHsgZ2l2ZW4sIHdoZW4sIHRoZW4gfSkgPT4ge1xyXG4gICAgc3RvcmUgPSBjb25maWd1cmVTdG9yZSh7XHJcbiAgICAgIHJlZHVjZXI6IHtcclxuICAgICAgICBsb2NhdGlvbkxpc3Q6IGxvY2F0aW9uU2xpY2UsXHJcbiAgICAgIH0sXHJcbiAgICB9KTtcclxuICAgIGdpdmVuKFwidGhlIHVzZXIgaXMgb24gdGhlIExvY2F0aW9ucyBwYWdlXCIsICgpID0+IHtcclxuICAgICAgY29uc3Qgc2NyZWVuID0gcmVuZGVyKFxyXG4gICAgICAgIDxQcm92aWRlciBzdG9yZT17c3RvcmV9PlxyXG4gICAgICAgICAgPE1lbW9yeVJvdXRlcj5cclxuICAgICAgICAgICAgPExvY2F0aW9ucyAvPlxyXG4gICAgICAgICAgICA8TWFwIC8+XHJcbiAgICAgICAgICA8L01lbW9yeVJvdXRlcj5cclxuICAgICAgICA8L1Byb3ZpZGVyPlxyXG4gICAgICApO1xyXG4gICAgICBleHBlY3Qoc2NyZWVuKS50b0JlVHJ1dGh5KCk7XHJcbiAgICB9KTtcclxuICB9KTtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQUEsT0FBQTtBQUNBLElBQUFDLGVBQUEsR0FBQUQsT0FBQTtBQU1BLElBQUFFLGFBQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLE9BQUEsR0FBQUgsT0FBQTtBQUNBLElBQUFJLGNBQUEsR0FBQUwsc0JBQUEsQ0FBQUMsT0FBQTtBQU1BLElBQUFLLFVBQUEsR0FBQU4sc0JBQUEsQ0FBQUMsT0FBQTtBQUNBQSxPQUFBO0FBQ0EsSUFBQU0sSUFBQSxHQUFBUCxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQU8sV0FBQSxHQUFBUCxPQUFBO0FBQ0EsSUFBQVEsUUFBQSxHQUFBUixPQUFBO0FBQWtELFNBQUFELHVCQUFBVSxHQUFBLFdBQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUEsS0FBQUUsT0FBQSxFQUFBRixHQUFBO0FBQ2xELE1BQU1HLE9BQU8sR0FBRyxJQUFBQyx5QkFBVyxFQUFDLDJDQUEyQyxDQUFDO0FBQ3hFLElBQUlDLEtBQVU7QUFDZCxJQUFBQywyQkFBYSxFQUFDSCxPQUFPLEVBQUdJLElBQUksSUFBSztFQUMvQkEsSUFBSSxDQUFDLDZCQUE2QixFQUFFLENBQUM7SUFBRUMsS0FBSztJQUFFQyxJQUFJO0lBQUVDO0VBQUssQ0FBQyxLQUFLO0lBQzdETCxLQUFLLEdBQUcsSUFBQU0sdUJBQWMsRUFBQztNQUNyQkMsT0FBTyxFQUFFO1FBQ1BDLFlBQVksRUFBRUM7TUFDaEI7SUFDRixDQUFDLENBQUM7SUFDRk4sS0FBSyxDQUFDLG1DQUFtQyxFQUFFLE1BQU07TUFDL0MsTUFBTU8sTUFBTSxHQUFHLElBQUFDLGNBQU0sZ0JBQ25CM0IsTUFBQSxDQUFBYSxPQUFBLENBQUFlLGFBQUEsQ0FBQ25CLFdBQUEsQ0FBQW9CLFFBQVE7UUFBQ2IsS0FBSyxFQUFFQTtNQUFNLGdCQUNyQmhCLE1BQUEsQ0FBQWEsT0FBQSxDQUFBZSxhQUFBLENBQUN6QixlQUFBLENBQUEyQixZQUFZLHFCQUNYOUIsTUFBQSxDQUFBYSxPQUFBLENBQUFlLGFBQUEsQ0FBQ3JCLFVBQUEsQ0FBQU0sT0FBUyxPQUFHLGVBQ2JiLE1BQUEsQ0FBQWEsT0FBQSxDQUFBZSxhQUFBLENBQUNwQixJQUFBLENBQUFLLE9BQUcsT0FBRyxDQUNNLENBQ04sQ0FDWjtNQUNEa0IsTUFBTSxDQUFDTCxNQUFNLENBQUMsQ0FBQ00sVUFBVSxFQUFFO0lBQzdCLENBQUMsQ0FBQztFQUNKLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyJ9