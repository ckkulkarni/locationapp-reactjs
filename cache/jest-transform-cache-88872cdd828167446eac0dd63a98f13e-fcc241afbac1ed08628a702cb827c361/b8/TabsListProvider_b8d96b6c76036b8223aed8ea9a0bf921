95302520da7cc9ebff195f327c6b7822
"use strict";
'use client';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TabsListProvider = TabsListProvider;
var React = _interopRequireWildcard(require("react"));
var _ListContext = require("../useList/ListContext");
var _useCompound = require("../utils/useCompound");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function (nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
/**
 * Sets up the contexts for the underlying Tab components.
 *
 * @ignore - do not document.
 */
function TabsListProvider(props) {
  const {
    value,
    children
  } = props;
  const {
    dispatch,
    getItemIndex,
    getItemState,
    registerHighlightChangeHandler,
    registerSelectionChangeHandler,
    registerItem,
    totalSubitemCount
  } = value;
  const listContextValue = React.useMemo(() => ({
    dispatch,
    getItemState,
    getItemIndex,
    registerHighlightChangeHandler,
    registerSelectionChangeHandler
  }), [dispatch, getItemIndex, getItemState, registerHighlightChangeHandler, registerSelectionChangeHandler]);
  const compoundComponentContextValue = React.useMemo(() => ({
    getItemIndex,
    registerItem,
    totalSubitemCount
  }), [registerItem, getItemIndex, totalSubitemCount]);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_useCompound.CompoundComponentContext.Provider, {
    value: compoundComponentContextValue,
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ListContext.ListContext.Provider, {
      value: listContextValue,
      children: children
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlRhYnNMaXN0UHJvdmlkZXIiLCJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9MaXN0Q29udGV4dCIsIl91c2VDb21wb3VuZCIsIl9qc3hSdW50aW1lIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJwcm9wcyIsImNoaWxkcmVuIiwiZGlzcGF0Y2giLCJnZXRJdGVtSW5kZXgiLCJnZXRJdGVtU3RhdGUiLCJyZWdpc3RlckhpZ2hsaWdodENoYW5nZUhhbmRsZXIiLCJyZWdpc3RlclNlbGVjdGlvbkNoYW5nZUhhbmRsZXIiLCJyZWdpc3Rlckl0ZW0iLCJ0b3RhbFN1Yml0ZW1Db3VudCIsImxpc3RDb250ZXh0VmFsdWUiLCJ1c2VNZW1vIiwiY29tcG91bmRDb21wb25lbnRDb250ZXh0VmFsdWUiLCJqc3giLCJDb21wb3VuZENvbXBvbmVudENvbnRleHQiLCJQcm92aWRlciIsIkxpc3RDb250ZXh0Il0sInNvdXJjZXMiOlsiVGFic0xpc3RQcm92aWRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbid1c2UgY2xpZW50JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuVGFic0xpc3RQcm92aWRlciA9IFRhYnNMaXN0UHJvdmlkZXI7XG52YXIgUmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwicmVhY3RcIikpO1xudmFyIF9MaXN0Q29udGV4dCA9IHJlcXVpcmUoXCIuLi91c2VMaXN0L0xpc3RDb250ZXh0XCIpO1xudmFyIF91c2VDb21wb3VuZCA9IHJlcXVpcmUoXCIuLi91dGlscy91c2VDb21wb3VuZFwiKTtcbnZhciBfanN4UnVudGltZSA9IHJlcXVpcmUoXCJyZWFjdC9qc3gtcnVudGltZVwiKTtcbmZ1bmN0aW9uIF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShub2RlSW50ZXJvcCkgeyBpZiAodHlwZW9mIFdlYWtNYXAgIT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIG51bGw7IHZhciBjYWNoZUJhYmVsSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7IHZhciBjYWNoZU5vZGVJbnRlcm9wID0gbmV3IFdlYWtNYXAoKTsgcmV0dXJuIChfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUgPSBmdW5jdGlvbiAobm9kZUludGVyb3ApIHsgcmV0dXJuIG5vZGVJbnRlcm9wID8gY2FjaGVOb2RlSW50ZXJvcCA6IGNhY2hlQmFiZWxJbnRlcm9wOyB9KShub2RlSW50ZXJvcCk7IH1cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaiwgbm9kZUludGVyb3ApIHsgaWYgKCFub2RlSW50ZXJvcCAmJiBvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsgcmV0dXJuIG9iajsgfSBpZiAob2JqID09PSBudWxsIHx8IHR5cGVvZiBvYmogIT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG9iaiAhPT0gXCJmdW5jdGlvblwiKSB7IHJldHVybiB7IGRlZmF1bHQ6IG9iaiB9OyB9IHZhciBjYWNoZSA9IF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShub2RlSW50ZXJvcCk7IGlmIChjYWNoZSAmJiBjYWNoZS5oYXMob2JqKSkgeyByZXR1cm4gY2FjaGUuZ2V0KG9iaik7IH0gdmFyIG5ld09iaiA9IHt9OyB2YXIgaGFzUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7IGZvciAodmFyIGtleSBpbiBvYmopIHsgaWYgKGtleSAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgeyB2YXIgZGVzYyA9IGhhc1Byb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDogbnVsbDsgaWYgKGRlc2MgJiYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOyB9IGVsc2UgeyBuZXdPYmpba2V5XSA9IG9ialtrZXldOyB9IH0gfSBuZXdPYmouZGVmYXVsdCA9IG9iajsgaWYgKGNhY2hlKSB7IGNhY2hlLnNldChvYmosIG5ld09iaik7IH0gcmV0dXJuIG5ld09iajsgfVxuLyoqXG4gKiBTZXRzIHVwIHRoZSBjb250ZXh0cyBmb3IgdGhlIHVuZGVybHlpbmcgVGFiIGNvbXBvbmVudHMuXG4gKlxuICogQGlnbm9yZSAtIGRvIG5vdCBkb2N1bWVudC5cbiAqL1xuZnVuY3Rpb24gVGFic0xpc3RQcm92aWRlcihwcm9wcykge1xuICBjb25zdCB7XG4gICAgdmFsdWUsXG4gICAgY2hpbGRyZW5cbiAgfSA9IHByb3BzO1xuICBjb25zdCB7XG4gICAgZGlzcGF0Y2gsXG4gICAgZ2V0SXRlbUluZGV4LFxuICAgIGdldEl0ZW1TdGF0ZSxcbiAgICByZWdpc3RlckhpZ2hsaWdodENoYW5nZUhhbmRsZXIsXG4gICAgcmVnaXN0ZXJTZWxlY3Rpb25DaGFuZ2VIYW5kbGVyLFxuICAgIHJlZ2lzdGVySXRlbSxcbiAgICB0b3RhbFN1Yml0ZW1Db3VudFxuICB9ID0gdmFsdWU7XG4gIGNvbnN0IGxpc3RDb250ZXh0VmFsdWUgPSBSZWFjdC51c2VNZW1vKCgpID0+ICh7XG4gICAgZGlzcGF0Y2gsXG4gICAgZ2V0SXRlbVN0YXRlLFxuICAgIGdldEl0ZW1JbmRleCxcbiAgICByZWdpc3RlckhpZ2hsaWdodENoYW5nZUhhbmRsZXIsXG4gICAgcmVnaXN0ZXJTZWxlY3Rpb25DaGFuZ2VIYW5kbGVyXG4gIH0pLCBbZGlzcGF0Y2gsIGdldEl0ZW1JbmRleCwgZ2V0SXRlbVN0YXRlLCByZWdpc3RlckhpZ2hsaWdodENoYW5nZUhhbmRsZXIsIHJlZ2lzdGVyU2VsZWN0aW9uQ2hhbmdlSGFuZGxlcl0pO1xuICBjb25zdCBjb21wb3VuZENvbXBvbmVudENvbnRleHRWYWx1ZSA9IFJlYWN0LnVzZU1lbW8oKCkgPT4gKHtcbiAgICBnZXRJdGVtSW5kZXgsXG4gICAgcmVnaXN0ZXJJdGVtLFxuICAgIHRvdGFsU3ViaXRlbUNvdW50XG4gIH0pLCBbcmVnaXN0ZXJJdGVtLCBnZXRJdGVtSW5kZXgsIHRvdGFsU3ViaXRlbUNvdW50XSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovKDAsIF9qc3hSdW50aW1lLmpzeCkoX3VzZUNvbXBvdW5kLkNvbXBvdW5kQ29tcG9uZW50Q29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiBjb21wb3VuZENvbXBvbmVudENvbnRleHRWYWx1ZSxcbiAgICBjaGlsZHJlbjogLyojX19QVVJFX18qLygwLCBfanN4UnVudGltZS5qc3gpKF9MaXN0Q29udGV4dC5MaXN0Q29udGV4dC5Qcm92aWRlciwge1xuICAgICAgdmFsdWU6IGxpc3RDb250ZXh0VmFsdWUsXG4gICAgICBjaGlsZHJlbjogY2hpbGRyZW5cbiAgICB9KVxuICB9KTtcbn0iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7QUFDWixZQUFZOztBQUVaQSxNQUFNLENBQUNDLGNBQWMsQ0FBQ0MsT0FBTyxFQUFFLFlBQVksRUFBRTtFQUMzQ0MsS0FBSyxFQUFFO0FBQ1QsQ0FBQyxDQUFDO0FBQ0ZELE9BQU8sQ0FBQ0UsZ0JBQWdCLEdBQUdBLGdCQUFnQjtBQUMzQyxJQUFJQyxLQUFLLEdBQUdDLHVCQUF1QixDQUFD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