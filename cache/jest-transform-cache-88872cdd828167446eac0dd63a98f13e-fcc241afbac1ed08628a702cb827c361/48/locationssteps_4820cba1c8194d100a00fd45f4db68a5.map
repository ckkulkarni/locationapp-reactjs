{"version":3,"names":["_getJestObj","mock","_react","_interopRequireDefault","require","_jestCucumber","_react2","_reactRedux","_toolkit","_locationSlice","_interopRequireWildcard","_reactRouterDom","_Locations","_Map","_axios","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","jest","feature","loadFeature","defineFeature","test","given","when","then","and","setTimeout","store","configureStore","reducer","locationList","locationSlice","mockPosition","coords","latitude","longitude","mockAddressResponse","data","results","formatted_address","axios","mockResolvedValueOnce","mockGeolocation","getCurrentPosition","fn","successCallback","global","navigator","value","configurable","screen","render","createElement","Provider","MemoryRouter","initialEntries","Routes","Route","path","element","waitFor","expect","toBeDefined","locationsContainer","getByTestId","toBeInTheDocument","getByText","currentDateTime","Date","toLocaleString","clearAllButton","getByRole","name","useFakeTimers","address","dateTime","act","dispatch","addPreviousLocation","advanceTimersByTime","findByTestId","previousLocation1","toHaveTextContent","previoustime1","previousDateTime","getTime","previousLocation2","removeButton2","getAllByRole","fireEvent","click"],"sources":["locations.steps.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { defineFeature, loadFeature } from \"jest-cucumber\";\r\nimport { fireEvent, render, waitFor, act } from \"@testing-library/react\";\r\nimport \"text-encoding\";\r\nimport \"@testing-library/jest-dom/extend-expect\";\r\nimport { Provider } from \"react-redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport locationSlice, {\r\n  addPreviousLocation,\r\n  clearPreviousLocations,\r\n  removePreviousLocation,\r\n  setCurrentLocation,\r\n} from \"./../../reducers/reducer/locationSlice\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  MemoryRouter,\r\n} from \"react-router-dom\";\r\nimport Locations from \"../../Locations\";\r\nimport Map from \"../../Map\";\r\nimport axios from \"axios\";\r\njest.mock(\"axios\");\r\nconst feature = loadFeature(\"src/components/features/locations.feature\");\r\n\r\ndefineFeature(feature, (test) => {\r\n  test(\"Displaying Current Location\", ({ given, when, then, and }) => {\r\n    jest.setTimeout(50000);\r\n    const store = configureStore({\r\n      reducer: {\r\n        locationList: locationSlice,\r\n      },\r\n    });\r\n    const mockPosition = {\r\n      coords: {\r\n        latitude: 37.7749,\r\n        longitude: -122.4194,\r\n      },\r\n    };\r\n    const mockAddressResponse = {\r\n      data: {\r\n        results: [\r\n          {\r\n            formatted_address: \"123 Street, Hyd\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    (axios.get as jest.Mock).mockResolvedValueOnce(mockAddressResponse);\r\n    const mockGeolocation = {\r\n      getCurrentPosition: jest.fn((successCallback) => {\r\n        successCallback(mockPosition);\r\n      }),\r\n    };\r\n\r\n    Object.defineProperty(global.navigator, \"geolocation\", {\r\n      value: mockGeolocation,\r\n      configurable: true,\r\n    });\r\n\r\n    const screen = render(\r\n      <Provider store={store}>\r\n        <MemoryRouter initialEntries={[\"/\"]}>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Locations />} />\r\n            <Route path=\"/map\" element={<Map />} />\r\n          </Routes>\r\n        </MemoryRouter>\r\n      </Provider>\r\n    );\r\n\r\n    given(\"the user is on the Locations page\", async () => {\r\n      await waitFor(() => {\r\n        expect(screen).toBeDefined();\r\n        const locationsContainer = screen.getByTestId(\"location-container\");\r\n        expect(locationsContainer).toBeInTheDocument();\r\n      });\r\n    });\r\n    when(\"the page loads\", () => {\r\n      expect(screen).toBeDefined();\r\n    });\r\n    then(\"the user should see Current Location address\", () => {\r\n      expect(screen.getByText(\"Current Location\")).toBeInTheDocument();\r\n      expect(screen.getByText(\"123 Street, Hyd\")).toBeInTheDocument();\r\n    });\r\n    and(\"the user should see the date and time of the current location\", () => {\r\n      const currentDateTime = new Date().toLocaleString();\r\n      expect(screen.getByText(currentDateTime)).toBeInTheDocument();\r\n    });\r\n    and('the user should see a \"Clear All Locations\" button', () => {\r\n      const clearAllButton = screen.getByRole(\"button\", {\r\n        name: \"Clear All Locations\",\r\n      });\r\n      expect(clearAllButton).toBeInTheDocument();\r\n    });\r\n    and(\r\n      \"the user should see a list of previous addresses after a set interval of time\",\r\n      async () => {\r\n        jest.useFakeTimers();\r\n        const address = mockAddressResponse.data.results[0].formatted_address;\r\n        const latitude = mockPosition.coords.latitude;\r\n        const longitude = mockPosition.coords.longitude;\r\n        const dateTime = new Date().toLocaleString();\r\n        act(() => {\r\n          store.dispatch(\r\n            addPreviousLocation({ address, latitude, longitude, dateTime })\r\n          );\r\n        });\r\n        jest.advanceTimersByTime(300000);\r\n        await screen.findByTestId(\"previous-locations\");\r\n      }\r\n    );\r\n    and(\"each previous address should display the address\", async () => {\r\n      const previousLocation1 = await screen.findByTestId(\r\n        \"previous-location-1\"\r\n      );\r\n      expect(previousLocation1).toHaveTextContent(\"123 Street, Hyd\");\r\n    });\r\n    and(\r\n      \"each previous address should display the date and time of that location\",\r\n      async () => {\r\n        const previoustime1 = await screen.findByTestId(\"previous-time-1\");\r\n        const currentDateTime = new Date();\r\n        const previousDateTime = new Date(currentDateTime.getTime() - 300000);\r\n        const dateTime = previousDateTime.toLocaleString();\r\n        expect(previoustime1).toHaveTextContent(dateTime);\r\n      }\r\n    );\r\n    when(\r\n      'the user clicks the \"Remove\" button next to a previous address',\r\n      async () => {\r\n        const address = mockAddressResponse.data.results[0].formatted_address;\r\n        const latitude = mockPosition.coords.latitude;\r\n        const longitude = mockPosition.coords.longitude;\r\n        const dateTime = new Date().toLocaleString();\r\n        jest.useFakeTimers();\r\n        act(() => {\r\n          store.dispatch(\r\n            addPreviousLocation({ address, latitude, longitude, dateTime })\r\n          );\r\n        });\r\n        jest.advanceTimersByTime(300000);\r\n        const previousLocation2 = screen.getByTestId(\"previous-location-1\");\r\n        expect(previousLocation2).toBeDefined();\r\n        const removeButton2 = screen.getAllByRole(\"button\", { name: \"Remove\" });\r\n        fireEvent.click(removeButton2[1]);\r\n      }\r\n    );\r\n  });\r\n});\r\n"],"mappings":"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"}