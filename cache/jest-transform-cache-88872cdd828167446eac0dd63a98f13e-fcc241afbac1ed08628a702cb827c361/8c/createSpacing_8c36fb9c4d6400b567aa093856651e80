f0dabd0a14f988f3976f78b3e82ee910
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createSpacing;
var _spacing = require("../spacing");
// The different signatures imply different meaning for their arguments that can't be expressed structurally.
// We express the difference with variable names.
/* tslint:disable:unified-signatures */
/* tslint:enable:unified-signatures */
function createSpacing(spacingInput = 8) {
  // Already transformed.
  if (spacingInput.mui) {
    return spacingInput;
  }

  // Material Design layouts are visually balanced. Most measurements align to an 8dp grid, which aligns both spacing and the overall layout.
  // Smaller components, such as icons, can align to a 4dp grid.
  // https://m2.material.io/design/layout/understanding-layout.html
  const transform = (0, _spacing.createUnarySpacing)({
    spacing: spacingInput
  });
  const spacing = (...argsInput) => {
    if (process.env.NODE_ENV !== 'production') {
      if (!(argsInput.length <= 4)) {
        console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${argsInput.length}`);
      }
    }
    const args = argsInput.length === 0 ? [1] : argsInput;
    return args.map(argument => {
      const output = transform(argument);
      return typeof output === 'number' ? `${output}px` : output;
    }).join(' ');
  };
  spacing.mui = true;
  return spacing;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJjcmVhdGVTcGFjaW5nIiwiX3NwYWNpbmciLCJyZXF1aXJlIiwic3BhY2luZ0lucHV0IiwibXVpIiwidHJhbnNmb3JtIiwiY3JlYXRlVW5hcnlTcGFjaW5nIiwic3BhY2luZyIsImFyZ3NJbnB1dCIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsImxlbmd0aCIsImNvbnNvbGUiLCJlcnJvciIsImFyZ3MiLCJtYXAiLCJhcmd1bWVudCIsIm91dHB1dCIsImpvaW4iXSwic291cmNlcyI6WyJjcmVhdGVTcGFjaW5nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY3JlYXRlU3BhY2luZztcbnZhciBfc3BhY2luZyA9IHJlcXVpcmUoXCIuLi9zcGFjaW5nXCIpO1xuLy8gVGhlIGRpZmZlcmVudCBzaWduYXR1cmVzIGltcGx5IGRpZmZlcmVudCBtZWFuaW5nIGZvciB0aGVpciBhcmd1bWVudHMgdGhhdCBjYW4ndCBiZSBleHByZXNzZWQgc3RydWN0dXJhbGx5LlxuLy8gV2UgZXhwcmVzcyB0aGUgZGlmZmVyZW5jZSB3aXRoIHZhcmlhYmxlIG5hbWVzLlxuLyogdHNsaW50OmRpc2FibGU6dW5pZmllZC1zaWduYXR1cmVzICovXG4vKiB0c2xpbnQ6ZW5hYmxlOnVuaWZpZWQtc2lnbmF0dXJlcyAqL1xuZnVuY3Rpb24gY3JlYXRlU3BhY2luZyhzcGFjaW5nSW5wdXQgPSA4KSB7XG4gIC8vIEFscmVhZHkgdHJhbnNmb3JtZWQuXG4gIGlmIChzcGFjaW5nSW5wdXQubXVpKSB7XG4gICAgcmV0dXJuIHNwYWNpbmdJbnB1dDtcbiAgfVxuXG4gIC8vIE1hdGVyaWFsIERlc2lnbiBsYXlvdXRzIGFyZSB2aXN1YWxseSBiYWxhbmNlZC4gTW9zdCBtZWFzdXJlbWVudHMgYWxpZ24gdG8gYW4gOGRwIGdyaWQsIHdoaWNoIGFsaWducyBib3RoIHNwYWNpbmcgYW5kIHRoZSBvdmVyYWxsIGxheW91dC5cbiAgLy8gU21hbGxlciBjb21wb25lbnRzLCBzdWNoIGFzIGljb25zLCBjYW4gYWxpZ24gdG8gYSA0ZHAgZ3JpZC5cbiAgLy8gaHR0cHM6Ly9tMi5tYXRlcmlhbC5pby9kZXNpZ24vbGF5b3V0L3VuZGVyc3RhbmRpbmctbGF5b3V0Lmh0bWxcbiAgY29uc3QgdHJhbnNmb3JtID0gKDAsIF9zcGFjaW5nLmNyZWF0ZVVuYXJ5U3BhY2luZykoe1xuICAgIHNwYWNpbmc6IHNwYWNpbmdJbnB1dFxuICB9KTtcbiAgY29uc3Qgc3BhY2luZyA9ICguLi5hcmdzSW5wdXQpID0+IHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKCEoYXJnc0lucHV0Lmxlbmd0aCA8PSA0KSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKGBNVUk6IFRvbyBtYW55IGFyZ3VtZW50cyBwcm92aWRlZCwgZXhwZWN0ZWQgYmV0d2VlbiAwIGFuZCA0LCBnb3QgJHthcmdzSW5wdXQubGVuZ3RofWApO1xuICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBhcmdzID0gYXJnc0lucHV0Lmxlbmd0aCA9PT0gMCA/IFsxXSA6IGFyZ3NJbnB1dDtcbiAgICByZXR1cm4gYXJncy5tYXAoYXJndW1lbnQgPT4ge1xuICAgICAgY29uc3Qgb3V0cHV0ID0gdHJhbnNmb3JtKGFyZ3VtZW50KTtcbiAgICAgIHJldHVybiB0eXBlb2Ygb3V0cHV0ID09PSAnbnVtYmVyJyA/IGAke291dHB1dH1weGAgOiBvdXRwdXQ7XG4gICAgfSkuam9pbignICcpO1xuICB9O1xuICBzcGFjaW5nLm11aSA9IHRydWU7XG4gIHJldHVybiBzcGFjaW5nO1xufSJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWkEsTUFBTSxDQUFDQyxjQUFjLENBQUNDLE9BQU8sRUFBRSxZQUFZLEVBQUU7RUFDM0NDLEtBQUssRUFBRTtBQUNULENBQUMsQ0FBQztBQUNGRCxPQUFPLENBQUNFLE9BQU8sR0FBR0MsYUFBYTtBQUMvQixJQUFJQyxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxZQUFZLENBQUM7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTRixhQUFhQSxDQUFDRyxZQUFZLEdBQUcsQ0FBQyxFQUFFO0VBQ3ZDO0VBQ0EsSUFBSUEsWUFBWSxDQUFDQyxHQUFHLEVBQUU7SUFDcEIsT0FBT0QsWUFBWTtFQUNyQjs7RUFFQTtFQUNBO0VBQ0E7RUFDQSxNQUFNRSxTQUFTLEdBQUcsQ0FBQyxDQUFDLEVBQUVKLFFBQVEsQ0FBQ0ssa0JBQWtCLEVBQUU7SUFDakRDLE9BQU8sRUFBRUo7RUFDWCxDQUFDLENBQUM7RUFDRixNQUFNSSxPQUFPLEdBQUdBLENBQUMsR0FBR0MsU0FBUyxLQUFLO0lBQ2hDLElBQUlDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxRQUFRLEtBQUssWUFBWSxFQUFFO01BQ3pDLElBQUksRUFBRUgsU0FBUyxDQUFDSSxNQUFNLElBQUksQ0FBQyxDQUFDLEVBQUU7UUFDNUJDLE9BQU8sQ0FBQ0MsS0FBSyxDQUFFLG1FQUFrRU4sU0FBUyxDQUFDSSxNQUFPLEVBQUMsQ0FBQztNQUN0RztJQUNGO0lBQ0EsTUFBTUcsSUFBSSxHQUFHUCxTQUFTLENBQUNJLE1BQU0sS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBR0osU0FBUztJQUNyRCxPQUFPTyxJQUFJLENBQUNDLEdBQUcsQ0FBQ0MsUUFBUSxJQUFJO01BQzFCLE1BQU1DLE1BQU0sR0FBR2IsU0FBUyxDQUFDWSxRQUFRLENBQUM7TUFDbEMsT0FBTyxPQUFPQyxNQUFNLEtBQUssUUFBUSxHQUFJLEdBQUVBLE1BQU8sSUFBRyxHQUFHQSxNQUFNO0lBQzVELENBQUMsQ0FBQyxDQUFDQyxJQUFJLENBQUMsR0FBRyxDQUFDO0VBQ2QsQ0FBQztFQUNEWixPQUFPLENBQUNILEdBQUcsR0FBRyxJQUFJO0VBQ2xCLE9BQU9HLE9BQU87QUFDaEIifQ==