23ad7ed6b7169ec135f7bb767e1c3938
"use strict";

var _react = _interopRequireDefault(require("react"));
var _toolkit = require("@reduxjs/toolkit");
var _reactRouterDom = require("react-router-dom");
var _jestCucumber = require("jest-cucumber");
var _react2 = require("@testing-library/react");
var _locationSlice = _interopRequireDefault(require("./../../reducers/reducer/locationSlice"));
var _Locations = _interopRequireDefault(require("../../Locations"));
var _Map = _interopRequireDefault(require("../../Map"));
var _reactRedux = require("react-redux");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const feature = (0, _jestCucumber.loadFeature)("src/components/features/locations.feature");
let store;
(0, _jestCucumber.defineFeature)(feature, test => {
  test("Displaying Current Location", ({
    given,
    when,
    then
  }) => {
    store = (0, _toolkit.configureStore)({
      reducer: {
        locationList: _locationSlice.default
      }
    });
    const screen = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
      store: store
    }, /*#__PURE__*/_react.default.createElement(_reactRouterDom.BrowserRouter, null, /*#__PURE__*/_react.default.createElement(_reactRouterDom.Routes, null, /*#__PURE__*/_react.default.createElement(_reactRouterDom.Route, {
      path: "/",
      element: /*#__PURE__*/_react.default.createElement(_Locations.default, null)
    }), /*#__PURE__*/_react.default.createElement(_reactRouterDom.Route, {
      path: "/map",
      element: /*#__PURE__*/_react.default.createElement(_Map.default, null)
    })))));
    given("the user is on the Locations page", () => {
      expect(screen).toBeTruthy();
      expect(screen.getByTestId("location-container")).toBeTruty();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl90b29sa2l0IiwiX3JlYWN0Um91dGVyRG9tIiwiX2plc3RDdWN1bWJlciIsIl9yZWFjdDIiLCJfbG9jYXRpb25TbGljZSIsIl9Mb2NhdGlvbnMiLCJfTWFwIiwiX3JlYWN0UmVkdXgiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImZlYXR1cmUiLCJsb2FkRmVhdHVyZSIsInN0b3JlIiwiZGVmaW5lRmVhdHVyZSIsInRlc3QiLCJnaXZlbiIsIndoZW4iLCJ0aGVuIiwiY29uZmlndXJlU3RvcmUiLCJyZWR1Y2VyIiwibG9jYXRpb25MaXN0IiwibG9jYXRpb25TbGljZSIsInNjcmVlbiIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJQcm92aWRlciIsIkJyb3dzZXJSb3V0ZXIiLCJSb3V0ZXMiLCJSb3V0ZSIsInBhdGgiLCJlbGVtZW50IiwiZXhwZWN0IiwidG9CZVRydXRoeSIsImdldEJ5VGVzdElkIiwidG9CZVRydXR5Il0sInNvdXJjZXMiOlsibG9jYXRpb25zLnN0ZXBzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbmZpZ3VyZVN0b3JlIH0gZnJvbSBcIkByZWR1eGpzL3Rvb2xraXRcIjtcclxuaW1wb3J0IHsgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIsIFJvdXRlcywgUm91dGUgfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiO1xyXG5pbXBvcnQgeyBkZWZpbmVGZWF0dXJlLCBsb2FkRmVhdHVyZSB9IGZyb20gXCJqZXN0LWN1Y3VtYmVyXCI7XHJcbmltcG9ydCB7IGZpcmVFdmVudCwgcmVuZGVyLCB3YWl0Rm9yIH0gZnJvbSBcIkB0ZXN0aW5nLWxpYnJhcnkvcmVhY3RcIjtcclxuaW1wb3J0IGxvY2F0aW9uU2xpY2UsIHtcclxuICBhZGRQcmV2aW91c0xvY2F0aW9uLFxyXG4gIHNldEN1cnJlbnRMb2NhdGlvbixcclxuICByZW1vdmVQcmV2aW91c0xvY2F0aW9uLFxyXG4gIGNsZWFyUHJldmlvdXNMb2NhdGlvbnMsXHJcbn0gZnJvbSBcIi4vLi4vLi4vcmVkdWNlcnMvcmVkdWNlci9sb2NhdGlvblNsaWNlXCI7XHJcbmltcG9ydCBMb2NhdGlvbnMgZnJvbSBcIi4uLy4uL0xvY2F0aW9uc1wiO1xyXG5pbXBvcnQgTWFwIGZyb20gXCIuLi8uLi9NYXBcIjtcclxuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcclxuY29uc3QgZmVhdHVyZSA9IGxvYWRGZWF0dXJlKFwic3JjL2NvbXBvbmVudHMvZmVhdHVyZXMvbG9jYXRpb25zLmZlYXR1cmVcIik7XHJcbmxldCBzdG9yZTogYW55O1xyXG5kZWZpbmVGZWF0dXJlKGZlYXR1cmUsICh0ZXN0KSA9PiB7XHJcbiAgdGVzdChcIkRpc3BsYXlpbmcgQ3VycmVudCBMb2NhdGlvblwiLCAoeyBnaXZlbiwgd2hlbiwgdGhlbiB9KSA9PiB7XHJcbiAgICBzdG9yZSA9IGNvbmZpZ3VyZVN0b3JlKHtcclxuICAgICAgcmVkdWNlcjoge1xyXG4gICAgICAgIGxvY2F0aW9uTGlzdDogbG9jYXRpb25TbGljZSxcclxuICAgICAgfSxcclxuICAgIH0pO1xyXG4gICAgY29uc3Qgc2NyZWVuID0gcmVuZGVyKFxyXG4gICAgICA8UHJvdmlkZXIgc3RvcmU9e3N0b3JlfT5cclxuICAgICAgICA8Um91dGVyPlxyXG4gICAgICAgICAgPFJvdXRlcz5cclxuICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvXCIgZWxlbWVudD17PExvY2F0aW9ucyAvPn0gLz5cclxuICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvbWFwXCIgZWxlbWVudD17PE1hcCAvPn0gLz5cclxuICAgICAgICAgIDwvUm91dGVzPlxyXG4gICAgICAgIDwvUm91dGVyPlxyXG4gICAgICA8L1Byb3ZpZGVyPlxyXG4gICAgKTtcclxuICAgIGdpdmVuKFwidGhlIHVzZXIgaXMgb24gdGhlIExvY2F0aW9ucyBwYWdlXCIsICgpID0+IHtcclxuICAgICAgZXhwZWN0KHNjcmVlbikudG9CZVRydXRoeSgpO1xyXG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKFwibG9jYXRpb24tY29udGFpbmVyXCIpKS50b0JlVHJ1dHkoKTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFFBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLGVBQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLGFBQUEsR0FBQUgsT0FBQTtBQUNBLElBQUFJLE9BQUEsR0FBQUosT0FBQTtBQUNBLElBQUFLLGNBQUEsR0FBQU4sc0JBQUEsQ0FBQUMsT0FBQTtBQU1BLElBQUFNLFVBQUEsR0FBQVAsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFPLElBQUEsR0FBQVIsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFRLFdBQUEsR0FBQVIsT0FBQTtBQUF1QyxTQUFBRCx1QkFBQVUsR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLEtBQUFFLE9BQUEsRUFBQUYsR0FBQTtBQUN2QyxNQUFNRyxPQUFPLEdBQUcsSUFBQUMseUJBQVcsRUFBQywyQ0FBMkMsQ0FBQztBQUN4RSxJQUFJQyxLQUFVO0FBQ2QsSUFBQUMsMkJBQWEsRUFBQ0gsT0FBTyxFQUFHSSxJQUFJLElBQUs7RUFDL0JBLElBQUksQ0FBQyw2QkFBNkIsRUFBRSxDQUFDO0lBQUVDLEtBQUs7SUFBRUMsSUFBSTtJQUFFQztFQUFLLENBQUMsS0FBSztJQUM3REwsS0FBSyxHQUFHLElBQUFNLHVCQUFjLEVBQUM7TUFDckJDLE9BQU8sRUFBRTtRQUNQQyxZQUFZLEVBQUVDO01BQ2hCO0lBQ0YsQ0FBQyxDQUFDO0lBQ0YsTUFBTUMsTUFBTSxHQUFHLElBQUFDLGNBQU0sZ0JBQ25CM0IsTUFBQSxDQUFBYSxPQUFBLENBQUFlLGFBQUEsQ0FBQ2xCLFdBQUEsQ0FBQW1CLFFBQVE7TUFBQ2IsS0FBSyxFQUFFQTtJQUFNLGdCQUNyQmhCLE1BQUEsQ0FBQWEsT0FBQSxDQUFBZSxhQUFBLENBQUN4QixlQUFBLENBQUEwQixhQUFNLHFCQUNMOUIsTUFBQSxDQUFBYSxPQUFBLENBQUFlLGFBQUEsQ0FBQ3hCLGVBQUEsQ0FBQTJCLE1BQU0scUJBQ0wvQixNQUFBLENBQUFhLE9BQUEsQ0FBQWUsYUFBQSxDQUFDeEIsZUFBQSxDQUFBNEIsS0FBSztNQUFDQyxJQUFJLEVBQUMsR0FBRztNQUFDQyxPQUFPLGVBQUVsQyxNQUFBLENBQUFhLE9BQUEsQ0FBQWUsYUFBQSxDQUFDcEIsVUFBQSxDQUFBSyxPQUFTO0lBQUksRUFBRyxlQUMxQ2IsTUFBQSxDQUFBYSxPQUFBLENBQUFlLGFBQUEsQ0FBQ3hCLGVBQUEsQ0FBQTRCLEtBQUs7TUFBQ0MsSUFBSSxFQUFDLE1BQU07TUFBQ0MsT0FBTyxlQUFFbEMsTUFBQSxDQUFBYSxPQUFBLENBQUFlLGFBQUEsQ0FBQ25CLElBQUEsQ0FBQUksT0FBRztJQUFJLEVBQUcsQ0FDaEMsQ0FDRixDQUNBLENBQ1o7SUFDRE0sS0FBSyxDQUFDLG1DQUFtQyxFQUFFLE1BQU07TUFDL0NnQixNQUFNLENBQUNULE1BQU0sQ0FBQyxDQUFDVSxVQUFVLEVBQUU7TUFDM0JELE1BQU0sQ0FBQ1QsTUFBTSxDQUFDVyxXQUFXLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxDQUFDQyxTQUFTLEVBQUU7SUFDOUQsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDIn0=