{"version":3,"names":["_react","_interopRequireDefault","require","_jestCucumber","_react2","_reactRedux","_toolkit","_locationSlice","_reactRouterDom","_Locations","_Map","obj","__esModule","default","feature","loadFeature","mockGeolocation","getCurrentPosition","jest","fn","Object","defineProperty","global","navigator","value","configurable","defineFeature","test","given","when","then","store","configureStore","reducer","locationList","locationSlice","screen","render","createElement","Provider","MemoryRouter","Routes","Route","path","element","expect","toBeTruthy"],"sources":["locations.steps.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { defineFeature, loadFeature } from \"jest-cucumber\";\r\nimport { fireEvent, render, waitFor, act } from \"@testing-library/react\";\r\nimport \"text-encoding\";\r\nimport \"@testing-library/jest-dom/extend-expect\";\r\nimport { Provider } from \"react-redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport locationSlice, {\r\n  addPreviousLocation,\r\n  clearPreviousLocations,\r\n  removePreviousLocation,\r\n  setCurrentLocation,\r\n} from \"./../../reducers/reducer/locationSlice\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  MemoryRouter,\r\n} from \"react-router-dom\";\r\nimport Locations from \"../../Locations\";\r\nimport Map from \"../../Map\";\r\n\r\nconst feature = loadFeature(\"src/components/features/locations.feature\");\r\nconst mockGeolocation = {\r\n  getCurrentPosition: jest.fn(),\r\n};\r\nObject.defineProperty(global.navigator, \"geolocation\", {\r\n  value: mockGeolocation,\r\n  configurable: true,\r\n});\r\ndefineFeature(feature, (test) => {\r\n  test(\"Displaying Current Location\", ({ given, when, then }) => {\r\n    const store = configureStore({\r\n      reducer: {\r\n        locationList: locationSlice,\r\n      },\r\n    });\r\n\r\n    const screen = render(\r\n      <Provider store={store}>\r\n        <MemoryRouter>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Locations />} />\r\n            <Route path=\"/map\" element={<Map />} />\r\n          </Routes>\r\n        </MemoryRouter>\r\n      </Provider>\r\n    );\r\n    given(\"the user is on the Locations page\", () => {\r\n      expect(screen).toBeTruthy();\r\n    });\r\n  });\r\n});\r\n"],"mappings":";;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,aAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AACAA,OAAA;AACAA,OAAA;AACA,IAAAG,WAAA,GAAAH,OAAA;AACA,IAAAI,QAAA,GAAAJ,OAAA;AACA,IAAAK,cAAA,GAAAN,sBAAA,CAAAC,OAAA;AAMA,IAAAM,eAAA,GAAAN,OAAA;AAMA,IAAAO,UAAA,GAAAR,sBAAA,CAAAC,OAAA;AACA,IAAAQ,IAAA,GAAAT,sBAAA,CAAAC,OAAA;AAA4B,SAAAD,uBAAAU,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAE5B,MAAMG,OAAO,GAAG,IAAAC,yBAAW,EAAC,2CAA2C,CAAC;AACxE,MAAMC,eAAe,GAAG;EACtBC,kBAAkB,EAAEC,IAAI,CAACC,EAAE;AAC7B,CAAC;AACDC,MAAM,CAACC,cAAc,CAACC,MAAM,CAACC,SAAS,EAAE,aAAa,EAAE;EACrDC,KAAK,EAAER,eAAe;EACtBS,YAAY,EAAE;AAChB,CAAC,CAAC;AACF,IAAAC,2BAAa,EAACZ,OAAO,EAAGa,IAAI,IAAK;EAC/BA,IAAI,CAAC,6BAA6B,EAAE,CAAC;IAAEC,KAAK;IAAEC,IAAI;IAAEC;EAAK,CAAC,KAAK;IAC7D,MAAMC,KAAK,GAAG,IAAAC,uBAAc,EAAC;MAC3BC,OAAO,EAAE;QACPC,YAAY,EAAEC;MAChB;IACF,CAAC,CAAC;IAEF,MAAMC,MAAM,GAAG,IAAAC,cAAM,gBACnBrC,MAAA,CAAAa,OAAA,CAAAyB,aAAA,CAACjC,WAAA,CAAAkC,QAAQ;MAACR,KAAK,EAAEA;IAAM,gBACrB/B,MAAA,CAAAa,OAAA,CAAAyB,aAAA,CAAC9B,eAAA,CAAAgC,YAAY,qBACXxC,MAAA,CAAAa,OAAA,CAAAyB,aAAA,CAAC9B,eAAA,CAAAiC,MAAM,qBACLzC,MAAA,CAAAa,OAAA,CAAAyB,aAAA,CAAC9B,eAAA,CAAAkC,KAAK;MAACC,IAAI,EAAC,GAAG;MAACC,OAAO,eAAE5C,MAAA,CAAAa,OAAA,CAAAyB,aAAA,CAAC7B,UAAA,CAAAI,OAAS;IAAI,EAAG,eAC1Cb,MAAA,CAAAa,OAAA,CAAAyB,aAAA,CAAC9B,eAAA,CAAAkC,KAAK;MAACC,IAAI,EAAC,MAAM;MAACC,OAAO,eAAE5C,MAAA,CAAAa,OAAA,CAAAyB,aAAA,CAAC5B,IAAA,CAAAG,OAAG;IAAI,EAAG,CAChC,CACI,CACN,CACZ;IACDe,KAAK,CAAC,mCAAmC,EAAE,MAAM;MAC/CiB,MAAM,CAACT,MAAM,CAAC,CAACU,UAAU,EAAE;IAC7B,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}