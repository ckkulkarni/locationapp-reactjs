e121e3d193c5a6fb383f4b37a4b359a6
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Popup = void 0;
var _core = require("@react-leaflet/core");
var _leaflet = require("leaflet");
var _react = require("react");
const Popup = (0, _core.createOverlayComponent)(function createPopup(props, context) {
  const popup = new _leaflet.Popup(props, context.overlayContainer);
  return (0, _core.createElementObject)(popup, context);
}, function usePopupLifecycle(element, context, {
  position
}, setOpen) {
  (0, _react.useEffect)(function addPopup() {
    const {
      instance
    } = element;
    function onPopupOpen(event) {
      if (event.popup === instance) {
        instance.update();
        setOpen(true);
      }
    }
    function onPopupClose(event) {
      if (event.popup === instance) {
        setOpen(false);
      }
    }
    context.map.on({
      popupopen: onPopupOpen,
      popupclose: onPopupClose
    });
    if (context.overlayContainer == null) {
      // Attach to a Map
      if (position != null) {
        instance.setLatLng(position);
      }
      instance.openOn(context.map);
    } else {
      // Attach to container component
      context.overlayContainer.bindPopup(instance);
    }
    return function removePopup() {
      context.map.off({
        popupopen: onPopupOpen,
        popupclose: onPopupClose
      });
      context.overlayContainer?.unbindPopup();
      context.map.removeLayer(instance);
    };
  }, [element, context, setOpen, position]);
});
exports.Popup = Popup;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29yZSIsInJlcXVpcmUiLCJfbGVhZmxldCIsIl9yZWFjdCIsIlBvcHVwIiwiY3JlYXRlT3ZlcmxheUNvbXBvbmVudCIsImNyZWF0ZVBvcHVwIiwicHJvcHMiLCJjb250ZXh0IiwicG9wdXAiLCJMZWFmbGV0UG9wdXAiLCJvdmVybGF5Q29udGFpbmVyIiwiY3JlYXRlRWxlbWVudE9iamVjdCIsInVzZVBvcHVwTGlmZWN5Y2xlIiwiZWxlbWVudCIsInBvc2l0aW9uIiwic2V0T3BlbiIsInVzZUVmZmVjdCIsImFkZFBvcHVwIiwiaW5zdGFuY2UiLCJvblBvcHVwT3BlbiIsImV2ZW50IiwidXBkYXRlIiwib25Qb3B1cENsb3NlIiwibWFwIiwib24iLCJwb3B1cG9wZW4iLCJwb3B1cGNsb3NlIiwic2V0TGF0TG5nIiwib3Blbk9uIiwiYmluZFBvcHVwIiwicmVtb3ZlUG9wdXAiLCJvZmYiLCJ1bmJpbmRQb3B1cCIsInJlbW92ZUxheWVyIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIlBvcHVwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUVsZW1lbnRPYmplY3QsIGNyZWF0ZU92ZXJsYXlDb21wb25lbnQgfSBmcm9tICdAcmVhY3QtbGVhZmxldC9jb3JlJztcbmltcG9ydCB7IFBvcHVwIGFzIExlYWZsZXRQb3B1cCB9IGZyb20gJ2xlYWZsZXQnO1xuaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuZXhwb3J0IGNvbnN0IFBvcHVwID0gY3JlYXRlT3ZlcmxheUNvbXBvbmVudChmdW5jdGlvbiBjcmVhdGVQb3B1cChwcm9wcywgY29udGV4dCkge1xuICAgIGNvbnN0IHBvcHVwID0gbmV3IExlYWZsZXRQb3B1cChwcm9wcywgY29udGV4dC5vdmVybGF5Q29udGFpbmVyKTtcbiAgICByZXR1cm4gY3JlYXRlRWxlbWVudE9iamVjdChwb3B1cCwgY29udGV4dCk7XG59LCBmdW5jdGlvbiB1c2VQb3B1cExpZmVjeWNsZShlbGVtZW50LCBjb250ZXh0LCB7IHBvc2l0aW9uICB9LCBzZXRPcGVuKSB7XG4gICAgdXNlRWZmZWN0KGZ1bmN0aW9uIGFkZFBvcHVwKCkge1xuICAgICAgICBjb25zdCB7IGluc3RhbmNlICB9ID0gZWxlbWVudDtcbiAgICAgICAgZnVuY3Rpb24gb25Qb3B1cE9wZW4oZXZlbnQpIHtcbiAgICAgICAgICAgIGlmIChldmVudC5wb3B1cCA9PT0gaW5zdGFuY2UpIHtcbiAgICAgICAgICAgICAgICBpbnN0YW5jZS51cGRhdGUoKTtcbiAgICAgICAgICAgICAgICBzZXRPcGVuKHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIG9uUG9wdXBDbG9zZShldmVudCkge1xuICAgICAgICAgICAgaWYgKGV2ZW50LnBvcHVwID09PSBpbnN0YW5jZSkge1xuICAgICAgICAgICAgICAgIHNldE9wZW4oZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnRleHQubWFwLm9uKHtcbiAgICAgICAgICAgIHBvcHVwb3Blbjogb25Qb3B1cE9wZW4sXG4gICAgICAgICAgICBwb3B1cGNsb3NlOiBvblBvcHVwQ2xvc2VcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChjb250ZXh0Lm92ZXJsYXlDb250YWluZXIgPT0gbnVsbCkge1xuICAgICAgICAgICAgLy8gQXR0YWNoIHRvIGEgTWFwXG4gICAgICAgICAgICBpZiAocG9zaXRpb24gIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGluc3RhbmNlLnNldExhdExuZyhwb3NpdGlvbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpbnN0YW5jZS5vcGVuT24oY29udGV4dC5tYXApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gQXR0YWNoIHRvIGNvbnRhaW5lciBjb21wb25lbnRcbiAgICAgICAgICAgIGNvbnRleHQub3ZlcmxheUNvbnRhaW5lci5iaW5kUG9wdXAoaW5zdGFuY2UpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiByZW1vdmVQb3B1cCgpIHtcbiAgICAgICAgICAgIGNvbnRleHQubWFwLm9mZih7XG4gICAgICAgICAgICAgICAgcG9wdXBvcGVuOiBvblBvcHVwT3BlbixcbiAgICAgICAgICAgICAgICBwb3B1cGNsb3NlOiBvblBvcHVwQ2xvc2VcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY29udGV4dC5vdmVybGF5Q29udGFpbmVyPy51bmJpbmRQb3B1cCgpO1xuICAgICAgICAgICAgY29udGV4dC5tYXAucmVtb3ZlTGF5ZXIoaW5zdGFuY2UpO1xuICAgICAgICB9O1xuICAgIH0sIFtcbiAgICAgICAgZWxlbWVudCxcbiAgICAgICAgY29udGV4dCxcbiAgICAgICAgc2V0T3BlbixcbiAgICAgICAgcG9zaXRpb25cbiAgICBdKTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxLQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxRQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxNQUFBLEdBQUFGLE9BQUE7QUFDTyxNQUFNRyxLQUFLLEdBQUcsSUFBQUMsNEJBQXNCLEVBQUMsU0FBU0MsV0FBV0EsQ0FBQ0MsS0FBSyxFQUFFQyxPQUFPLEVBQUU7RUFDN0UsTUFBTUMsS0FBSyxHQUFHLElBQUlDLGNBQVksQ0FBQ0gsS0FBSyxFQUFFQyxPQUFPLENBQUNHLGdCQUFnQixDQUFDO0VBQy9ELE9BQU8sSUFBQUMseUJBQW1CLEVBQUNILEtBQUssRUFBRUQsT0FBTyxDQUFDO0FBQzlDLENBQUMsRUFBRSxTQUFTSyxpQkFBaUJBLENBQUNDLE9BQU8sRUFBRU4sT0FBTyxFQUFFO0VBQUVPO0FBQVUsQ0FBQyxFQUFFQyxPQUFPLEVBQUU7RUFDcEUsSUFBQUMsZ0JBQVMsRUFBQyxTQUFTQyxRQUFRQSxDQUFBLEVBQUc7SUFDMUIsTUFBTTtNQUFFQztJQUFVLENBQUMsR0FBR0wsT0FBTztJQUM3QixTQUFTTSxXQUFXQSxDQUFDQyxLQUFLLEVBQUU7TUFDeEIsSUFBSUEsS0FBSyxDQUFDWixLQUFLLEtBQUtVLFFBQVEsRUFBRTtRQUMxQkEsUUFBUSxDQUFDRyxNQUFNLEVBQUU7UUFDakJOLE9BQU8sQ0FBQyxJQUFJLENBQUM7TUFDakI7SUFDSjtJQUNBLFNBQVNPLFlBQVlBLENBQUNGLEtBQUssRUFBRTtNQUN6QixJQUFJQSxLQUFLLENBQUNaLEtBQUssS0FBS1UsUUFBUSxFQUFFO1FBQzFCSCxPQUFPLENBQUMsS0FBSyxDQUFDO01BQ2xCO0lBQ0o7SUFDQVIsT0FBTyxDQUFDZ0IsR0FBRyxDQUFDQyxFQUFFLENBQUM7TUFDWEMsU0FBUyxFQUFFTixXQUFXO01BQ3RCTyxVQUFVLEVBQUVKO0lBQ2hCLENBQUMsQ0FBQztJQUNGLElBQUlmLE9BQU8sQ0FBQ0csZ0JBQWdCLElBQUksSUFBSSxFQUFFO01BQ2xDO01BQ0EsSUFBSUksUUFBUSxJQUFJLElBQUksRUFBRTtRQUNsQkksUUFBUSxDQUFDUyxTQUFTLENBQUNiLFFBQVEsQ0FBQztNQUNoQztNQUNBSSxRQUFRLENBQUNVLE1BQU0sQ0FBQ3JCLE9BQU8sQ0FBQ2dCLEdBQUcsQ0FBQztJQUNoQyxDQUFDLE1BQU07TUFDSDtNQUNBaEIsT0FBTyxDQUFDRyxnQkFBZ0IsQ0FBQ21CLFNBQVMsQ0FBQ1gsUUFBUSxDQUFDO0lBQ2hEO0lBQ0EsT0FBTyxTQUFTWSxXQUFXQSxDQUFBLEVBQUc7TUFDMUJ2QixPQUFPLENBQUNnQixHQUFHLENBQUNRLEdBQUcsQ0FBQztRQUNaTixTQUFTLEVBQUVOLFdBQVc7UUFDdEJPLFVBQVUsRUFBRUo7TUFDaEIsQ0FBQyxDQUFDO01BQ0ZmLE9BQU8sQ0FBQ0csZ0JBQWdCLEVBQUVzQixXQUFXLEVBQUU7TUFDdkN6QixPQUFPLENBQUNnQixHQUFHLENBQUNVLFdBQVcsQ0FBQ2YsUUFBUSxDQUFDO0lBQ3JDLENBQUM7RUFDTCxDQUFDLEVBQUUsQ0FDQ0wsT0FBTyxFQUNQTixPQUFPLEVBQ1BRLE9BQU8sRUFDUEQsUUFBUSxDQUNYLENBQUM7QUFDTixDQUFDLENBQUM7QUFBQ29CLE9BQUEsQ0FBQS9CLEtBQUEsR0FBQUEsS0FBQSJ9