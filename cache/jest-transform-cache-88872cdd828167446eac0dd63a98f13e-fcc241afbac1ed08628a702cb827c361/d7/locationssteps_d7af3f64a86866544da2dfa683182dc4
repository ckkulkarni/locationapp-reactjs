c1f58fbdbe1a575990169263fc0b9c40
"use strict";

var _react = _interopRequireDefault(require("react"));
var _toolkit = require("@reduxjs/toolkit");
var _reactRouterDom = require("react-router-dom");
var _jestCucumber = require("jest-cucumber");
var _react2 = require("@testing-library/react");
var _locationSlice = _interopRequireDefault(require("./../../reducers/reducer/locationSlice"));
var _Locations = _interopRequireDefault(require("../../Locations"));
require("@testing-library/jest-dom/extend-expect");
var _reactRedux = require("react-redux");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const feature = (0, _jestCucumber.loadFeature)("src/components/features/locations.feature");
let store;
(0, _jestCucumber.defineFeature)(feature, test => {
  test("Displaying Current Location", ({
    given,
    when,
    then
  }) => {
    store = (0, _toolkit.configureStore)({
      reducer: {
        locationList: _locationSlice.default
      }
    });
    const screen = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
      store: store
    }, /*#__PURE__*/_react.default.createElement(_reactRouterDom.MemoryRouter, null, /*#__PURE__*/_react.default.createElement(_Locations.default, null))));
    given("the user is on the Locations page", () => {
      expect(screen).toBeTruthy();
      expect(screen.getByTestId("locationsContainer")).toBeTruthy();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl90b29sa2l0IiwiX3JlYWN0Um91dGVyRG9tIiwiX2plc3RDdWN1bWJlciIsIl9yZWFjdDIiLCJfbG9jYXRpb25TbGljZSIsIl9Mb2NhdGlvbnMiLCJfcmVhY3RSZWR1eCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZmVhdHVyZSIsImxvYWRGZWF0dXJlIiwic3RvcmUiLCJkZWZpbmVGZWF0dXJlIiwidGVzdCIsImdpdmVuIiwid2hlbiIsInRoZW4iLCJjb25maWd1cmVTdG9yZSIsInJlZHVjZXIiLCJsb2NhdGlvbkxpc3QiLCJsb2NhdGlvblNsaWNlIiwic2NyZWVuIiwicmVuZGVyIiwiY3JlYXRlRWxlbWVudCIsIlByb3ZpZGVyIiwiTWVtb3J5Um91dGVyIiwiZXhwZWN0IiwidG9CZVRydXRoeSIsImdldEJ5VGVzdElkIl0sInNvdXJjZXMiOlsibG9jYXRpb25zLnN0ZXBzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbmZpZ3VyZVN0b3JlIH0gZnJvbSBcIkByZWR1eGpzL3Rvb2xraXRcIjtcclxuaW1wb3J0IHtcclxuICBCcm93c2VyUm91dGVyIGFzIFJvdXRlcixcclxuICBSb3V0ZXMsXHJcbiAgUm91dGUsXHJcbiAgTWVtb3J5Um91dGVyLFxyXG59IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XHJcbmltcG9ydCB7IGRlZmluZUZlYXR1cmUsIGxvYWRGZWF0dXJlIH0gZnJvbSBcImplc3QtY3VjdW1iZXJcIjtcclxuaW1wb3J0IHsgZmlyZUV2ZW50LCByZW5kZXIsIHdhaXRGb3IgfSBmcm9tIFwiQHRlc3RpbmctbGlicmFyeS9yZWFjdFwiO1xyXG5pbXBvcnQgbG9jYXRpb25TbGljZSwge1xyXG4gIGFkZFByZXZpb3VzTG9jYXRpb24sXHJcbiAgc2V0Q3VycmVudExvY2F0aW9uLFxyXG4gIHJlbW92ZVByZXZpb3VzTG9jYXRpb24sXHJcbiAgY2xlYXJQcmV2aW91c0xvY2F0aW9ucyxcclxufSBmcm9tIFwiLi8uLi8uLi9yZWR1Y2Vycy9yZWR1Y2VyL2xvY2F0aW9uU2xpY2VcIjtcclxuaW1wb3J0IExvY2F0aW9ucyBmcm9tIFwiLi4vLi4vTG9jYXRpb25zXCI7XHJcbmltcG9ydCBcIkB0ZXN0aW5nLWxpYnJhcnkvamVzdC1kb20vZXh0ZW5kLWV4cGVjdFwiO1xyXG5pbXBvcnQgTWFwIGZyb20gXCIuLi8uLi9NYXBcIjtcclxuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcclxuY29uc3QgZmVhdHVyZSA9IGxvYWRGZWF0dXJlKFwic3JjL2NvbXBvbmVudHMvZmVhdHVyZXMvbG9jYXRpb25zLmZlYXR1cmVcIik7XHJcbmxldCBzdG9yZTogYW55O1xyXG5kZWZpbmVGZWF0dXJlKGZlYXR1cmUsICh0ZXN0KSA9PiB7XHJcbiAgdGVzdChcIkRpc3BsYXlpbmcgQ3VycmVudCBMb2NhdGlvblwiLCAoeyBnaXZlbiwgd2hlbiwgdGhlbiB9KSA9PiB7XHJcbiAgICBzdG9yZSA9IGNvbmZpZ3VyZVN0b3JlKHtcclxuICAgICAgcmVkdWNlcjoge1xyXG4gICAgICAgIGxvY2F0aW9uTGlzdDogbG9jYXRpb25TbGljZSxcclxuICAgICAgfSxcclxuICAgIH0pO1xyXG4gICAgY29uc3Qgc2NyZWVuID0gcmVuZGVyKFxyXG4gICAgICA8UHJvdmlkZXIgc3RvcmU9e3N0b3JlfT5cclxuICAgICAgICA8TWVtb3J5Um91dGVyPlxyXG4gICAgICAgICAgPExvY2F0aW9ucyAvPlxyXG4gICAgICAgIDwvTWVtb3J5Um91dGVyPlxyXG4gICAgICA8L1Byb3ZpZGVyPlxyXG4gICAgKTtcclxuICAgIGdpdmVuKFwidGhlIHVzZXIgaXMgb24gdGhlIExvY2F0aW9ucyBwYWdlXCIsICgpID0+IHtcclxuICAgICAgZXhwZWN0KHNjcmVlbikudG9CZVRydXRoeSgpO1xyXG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKFwibG9jYXRpb25zQ29udGFpbmVyXCIpKS50b0JlVHJ1dGh5KCk7XHJcbiAgICB9KTtcclxuICB9KTtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxRQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxlQUFBLEdBQUFGLE9BQUE7QUFNQSxJQUFBRyxhQUFBLEdBQUFILE9BQUE7QUFDQSxJQUFBSSxPQUFBLEdBQUFKLE9BQUE7QUFDQSxJQUFBSyxjQUFBLEdBQUFOLHNCQUFBLENBQUFDLE9BQUE7QUFNQSxJQUFBTSxVQUFBLEdBQUFQLHNCQUFBLENBQUFDLE9BQUE7QUFDQUEsT0FBQTtBQUVBLElBQUFPLFdBQUEsR0FBQVAsT0FBQTtBQUF1QyxTQUFBRCx1QkFBQVMsR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLEtBQUFFLE9BQUEsRUFBQUYsR0FBQTtBQUN2QyxNQUFNRyxPQUFPLEdBQUcsSUFBQUMseUJBQVcsRUFBQywyQ0FBMkMsQ0FBQztBQUN4RSxJQUFJQyxLQUFVO0FBQ2QsSUFBQUMsMkJBQWEsRUFBQ0gsT0FBTyxFQUFHSSxJQUFJLElBQUs7RUFDL0JBLElBQUksQ0FBQyw2QkFBNkIsRUFBRSxDQUFDO0lBQUVDLEtBQUs7SUFBRUMsSUFBSTtJQUFFQztFQUFLLENBQUMsS0FBSztJQUM3REwsS0FBSyxHQUFHLElBQUFNLHVCQUFjLEVBQUM7TUFDckJDLE9BQU8sRUFBRTtRQUNQQyxZQUFZLEVBQUVDO01BQ2hCO0lBQ0YsQ0FBQyxDQUFDO0lBQ0YsTUFBTUMsTUFBTSxHQUFHLElBQUFDLGNBQU0sZ0JBQ25CMUIsTUFBQSxDQUFBWSxPQUFBLENBQUFlLGFBQUEsQ0FBQ2xCLFdBQUEsQ0FBQW1CLFFBQVE7TUFBQ2IsS0FBSyxFQUFFQTtJQUFNLGdCQUNyQmYsTUFBQSxDQUFBWSxPQUFBLENBQUFlLGFBQUEsQ0FBQ3ZCLGVBQUEsQ0FBQXlCLFlBQVkscUJBQ1g3QixNQUFBLENBQUFZLE9BQUEsQ0FBQWUsYUFBQSxDQUFDbkIsVUFBQSxDQUFBSSxPQUFTLE9BQUcsQ0FDQSxDQUNOLENBQ1o7SUFDRE0sS0FBSyxDQUFDLG1DQUFtQyxFQUFFLE1BQU07TUFDL0NZLE1BQU0sQ0FBQ0wsTUFBTSxDQUFDLENBQUNNLFVBQVUsRUFBRTtNQUMzQkQsTUFBTSxDQUFDTCxNQUFNLENBQUNPLFdBQVcsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUNELFVBQVUsRUFBRTtJQUMvRCxDQUFDLENBQUM7RUFDSixDQUFDLENBQUM7QUFDSixDQUFDLENBQUMifQ==