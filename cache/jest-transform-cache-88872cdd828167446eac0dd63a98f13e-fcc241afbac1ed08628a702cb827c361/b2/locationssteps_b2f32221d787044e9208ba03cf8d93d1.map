{"version":3,"names":["_getJestObj","mock","_react","_interopRequireDefault","require","_jestCucumber","_react2","_reactRedux","_toolkit","_locationSlice","_reactRouterDom","_Locations","_Map","obj","__esModule","default","jest","feature","loadFeature","defineFeature","test","store","screen","mockPosition","mockGeolocation","beforeEach","configureStore","reducer","locationList","locationSlice","coords","latitude","longitude","getCurrentPosition","fn","successCallback","Object","defineProperty","global","navigator","value","configurable","render","createElement","Provider","MemoryRouter","initialEntries","Routes","Route","path","element","afterEach","clearAllMocks","given","when","then","and","waitFor","expect","toBeDefined","locationsContainer","getByTestId","toBeInTheDocument","getByText","currentDateTime","Date","toLocaleString","clearAllButton","getByRole","name"],"sources":["locations.steps.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { defineFeature, loadFeature } from \"jest-cucumber\";\r\nimport { fireEvent, render, waitFor, act } from \"@testing-library/react\";\r\nimport \"text-encoding\";\r\nimport \"@testing-library/jest-dom/extend-expect\";\r\nimport { Provider } from \"react-redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport locationSlice, {\r\n  addPreviousLocation,\r\n  clearPreviousLocations,\r\n  removePreviousLocation,\r\n  setCurrentLocation,\r\n} from \"./../../reducers/reducer/locationSlice\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  MemoryRouter,\r\n} from \"react-router-dom\";\r\nimport Locations from \"../../Locations\";\r\nimport Map from \"../../Map\";\r\nimport axios from \"axios\";\r\njest.mock(\"axios\");\r\nconst feature = loadFeature(\"src/components/features/locations.feature\");\r\n\r\ndefineFeature(feature, (test) => {\r\n  let store,\r\n    screen: any,\r\n    mockPosition: { coords: { latitude: number; longitude: number } },\r\n    mockGeolocation;\r\n\r\n  beforeEach(() => {\r\n    store = configureStore({\r\n      reducer: {\r\n        locationList: locationSlice,\r\n      },\r\n    });\r\n\r\n    mockPosition = {\r\n      coords: {\r\n        latitude: 37.7749,\r\n        longitude: -122.4194,\r\n      },\r\n    };\r\n\r\n    mockGeolocation = {\r\n      getCurrentPosition: jest.fn((successCallback) => {\r\n        successCallback(mockPosition);\r\n      }),\r\n    };\r\n\r\n    Object.defineProperty(global.navigator, \"geolocation\", {\r\n      value: mockGeolocation,\r\n      configurable: true,\r\n    });\r\n    screen = render(\r\n      <Provider store={store}>\r\n        <MemoryRouter initialEntries={[\"/\"]}>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Locations />} />\r\n            <Route path=\"/map\" element={<Map />} />\r\n          </Routes>\r\n        </MemoryRouter>\r\n      </Provider>\r\n    );\r\n  });\r\n\r\n  afterEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  test(\"Displaying Current Location\", ({ given, when, then, and }) => {\r\n    given(\"the user is on the Locations page\", async () => {\r\n      await waitFor(() => {\r\n        expect(screen).toBeDefined();\r\n        const locationsContainer = screen.getByTestId(\"location-container\");\r\n        expect(locationsContainer).toBeInTheDocument();\r\n      });\r\n    });\r\n    when(\"the page loads\", () => {\r\n      expect(screen).toBeDefined();\r\n    });\r\n    then(\"the user should see Current Location address\", () => {\r\n      expect(screen.getByText(\"Current Location\")).toBeInTheDocument();\r\n      expect(screen.getByText(\"123 Street, Hyd\")).toBeInTheDocument();\r\n    });\r\n    and(\"the user should see the date and time of the current location\", () => {\r\n      const currentDateTime = new Date().toLocaleString();\r\n      expect(screen.getByText(currentDateTime)).toBeInTheDocument();\r\n    });\r\n    and('the user should see a \"Clear All Locations\" button', () => {\r\n      const clearAllButton = screen.getByRole(\"button\", {\r\n        name: \"Clear All Locations\",\r\n      });\r\n    });\r\n  });\r\n  test(\"Displaying Previous Locations\", ({ given, when, then, and }) => {\r\n    given(\"the user is on the Locations page\", async () => {\r\n      await waitFor(() => {\r\n        expect(screen).toBeDefined();\r\n        const locationsContainer = screen.getByTestId(\"location-container\");\r\n        expect(locationsContainer).toBeInTheDocument();\r\n      });\r\n    });\r\n  });\r\n});\r\n"],"mappings":"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"}