d4d08f0ca4bfa7e3aa2749749c5b4d46
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LeafletProvider = exports.LeafletContext = exports.CONTEXT_VERSION = void 0;
exports.createLeafletContext = createLeafletContext;
exports.extendContext = extendContext;
exports.useLeafletContext = useLeafletContext;
var _react = require("react");
const CONTEXT_VERSION = 1;
exports.CONTEXT_VERSION = CONTEXT_VERSION;
function createLeafletContext(map) {
  return Object.freeze({
    __version: CONTEXT_VERSION,
    map
  });
}
function extendContext(source, extra) {
  return Object.freeze({
    ...source,
    ...extra
  });
}
const LeafletContext = /*#__PURE__*/(0, _react.createContext)(null);
exports.LeafletContext = LeafletContext;
const LeafletProvider = LeafletContext.Provider;
exports.LeafletProvider = LeafletProvider;
function useLeafletContext() {
  const context = (0, _react.useContext)(LeafletContext);
  if (context == null) {
    throw new Error('No context provided: useLeafletContext() can only be used in a descendant of <MapContainer>');
  }
  return context;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiQ09OVEVYVF9WRVJTSU9OIiwiZXhwb3J0cyIsImNyZWF0ZUxlYWZsZXRDb250ZXh0IiwibWFwIiwiT2JqZWN0IiwiZnJlZXplIiwiX192ZXJzaW9uIiwiZXh0ZW5kQ29udGV4dCIsInNvdXJjZSIsImV4dHJhIiwiTGVhZmxldENvbnRleHQiLCJjcmVhdGVDb250ZXh0IiwiTGVhZmxldFByb3ZpZGVyIiwiUHJvdmlkZXIiLCJ1c2VMZWFmbGV0Q29udGV4dCIsImNvbnRleHQiLCJ1c2VDb250ZXh0IiwiRXJyb3IiXSwic291cmNlcyI6WyJjb250ZXh0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5leHBvcnQgY29uc3QgQ09OVEVYVF9WRVJTSU9OID0gMTtcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVMZWFmbGV0Q29udGV4dChtYXApIHtcbiAgICByZXR1cm4gT2JqZWN0LmZyZWV6ZSh7XG4gICAgICAgIF9fdmVyc2lvbjogQ09OVEVYVF9WRVJTSU9OLFxuICAgICAgICBtYXBcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBleHRlbmRDb250ZXh0KHNvdXJjZSwgZXh0cmEpIHtcbiAgICByZXR1cm4gT2JqZWN0LmZyZWV6ZSh7XG4gICAgICAgIC4uLnNvdXJjZSxcbiAgICAgICAgLi4uZXh0cmFcbiAgICB9KTtcbn1cbmV4cG9ydCBjb25zdCBMZWFmbGV0Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQobnVsbCk7XG5leHBvcnQgY29uc3QgTGVhZmxldFByb3ZpZGVyID0gTGVhZmxldENvbnRleHQuUHJvdmlkZXI7XG5leHBvcnQgZnVuY3Rpb24gdXNlTGVhZmxldENvbnRleHQoKSB7XG4gICAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoTGVhZmxldENvbnRleHQpO1xuICAgIGlmIChjb250ZXh0ID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBjb250ZXh0IHByb3ZpZGVkOiB1c2VMZWFmbGV0Q29udGV4dCgpIGNhbiBvbmx5IGJlIHVzZWQgaW4gYSBkZXNjZW5kYW50IG9mIDxNYXBDb250YWluZXI+Jyk7XG4gICAgfVxuICAgIHJldHVybiBjb250ZXh0O1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLE9BQUE7QUFDTyxNQUFNQyxlQUFlLEdBQUcsQ0FBQztBQUFDQyxPQUFBLENBQUFELGVBQUEsR0FBQUEsZUFBQTtBQUMxQixTQUFTRSxvQkFBb0JBLENBQUNDLEdBQUcsRUFBRTtFQUN0QyxPQUFPQyxNQUFNLENBQUNDLE1BQU0sQ0FBQztJQUNqQkMsU0FBUyxFQUFFTixlQUFlO0lBQzFCRztFQUNKLENBQUMsQ0FBQztBQUNOO0FBQ08sU0FBU0ksYUFBYUEsQ0FBQ0MsTUFBTSxFQUFFQyxLQUFLLEVBQUU7RUFDekMsT0FBT0wsTUFBTSxDQUFDQyxNQUFNLENBQUM7SUFDakIsR0FBR0csTUFBTTtJQUNULEdBQUdDO0VBQ1AsQ0FBQyxDQUFDO0FBQ047QUFDTyxNQUFNQyxjQUFjLGdCQUFHLElBQUFDLG9CQUFhLEVBQUMsSUFBSSxDQUFDO0FBQUNWLE9BQUEsQ0FBQVMsY0FBQSxHQUFBQSxjQUFBO0FBQzNDLE1BQU1FLGVBQWUsR0FBR0YsY0FBYyxDQUFDRyxRQUFRO0FBQUNaLE9BQUEsQ0FBQVcsZUFBQSxHQUFBQSxlQUFBO0FBQ2hELFNBQVNFLGlCQUFpQkEsQ0FBQSxFQUFHO0VBQ2hDLE1BQU1DLE9BQU8sR0FBRyxJQUFBQyxpQkFBVSxFQUFDTixjQUFjLENBQUM7RUFDMUMsSUFBSUssT0FBTyxJQUFJLElBQUksRUFBRTtJQUNqQixNQUFNLElBQUlFLEtBQUssQ0FBQyw2RkFBNkYsQ0FBQztFQUNsSDtFQUNBLE9BQU9GLE9BQU87QUFDbEIifQ==